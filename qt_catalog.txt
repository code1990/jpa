>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++设计模式
第Ⅰ部分 C++和Qt4简介
第1章 C++简介
第2章 类
第3章 Qt简介
第4章 列表
第5章 函数
第6章 继承与多态
第Ⅱ部分 高级编程
第7章 库
第8章 设计模式简介
第9章 QObject
第10章 范型与容器
第11章 Qt GUI部件
第12章 并行
第13章 验证与正则表达式
第14章 解析XML
第15章 元对象、性质和反射编程
第16章 更多设计模式
第17章 模型与视图
第18章 Qt SQL类
第Ⅲ部分 C++语言参考
第19章 类型与表达式
第20章 作用域类与存储类
第21章 语句与控制结构
第22章 内存访问
第23章 继承详述
第24章 其他相关话题
第Ⅳ部分 编程作业
第25章 MP3点唱机作业
第Ⅴ部分 附录
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt高级编程
第1章  混合桌面/Internet应用程序  1.1  Internet相关窗口部件  1.2  WebKit的使用第2章  声音和视频  2.1  QSound和QMovie的使用  2.2  Phonon多媒体框架第3章  模型/视图表格模型  3.1  Qt的模型/视图架构  3.2  用于表格的QStandardItemModel  3.3  创建自定义表格模型第4章  模型/视图树模型  4.1  用于树QStandardItemModel的用法  4.2  创建自定义树模型第5章  模型/视图委托  5.1  与数据类型相关的编辑器  5.2  与数据类型相关的委托  5.3  与模型相关的委托第6章  模型/视图中的视图  6.1  QAbstractItemView子类  6.2  与模型相关的可视化视?第7章  用QtConcurrent实现线程处理  7.1  在线程中执行函数  7.2  线程中的过滤和映射第8章  用QThread实现线程处理  8.1  独立项的处理  8.2  共享项的处理第9章   创建富文本编辑器  9.1  QTextDocument简介  9.2  创建自定义的文本编辑器  9.3  一个单行的富文本编辑器  9.4  编辑多行的富文本第10章  创建富文本文档  10.1高质量地输出QTextDocument文件  10.2  创建QTextDocument  10.3  输出和打印文档  10.4  绘制页面第11章  创建图形/视图窗口  11.1  图形/视图架构  11.2  图形/视图窗口部件和布局  11.3  图形项简介第12章  创建图形/视图场景  12.1  场景、项和动作  12.2  增强QGraphicsView的功能  12.3  创建可停靠的工具箱窗口部件  12.4  创建自定义图形项第13章  动画和状态机框架  13.1  动画框架简介  13.2  状态机框架简介  13.3  动画和状态机的结合结束语精选书目
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++GUI Qt4编程
第一部 分Ql基础============================================
第1章 Qt入门
1.1 Hello Qt
第2章 创建对话框
2.1 子类化QI)ialog
2.2 深入介绍信号和槽
第3章 创建主窗口
第4章 实现应用程序的功能
4.1 中央窗口部件
第5章 创建自定义窗口部件
第二部分 Ot中级============================================
第6章 布局管理
第7章 事件处理
第8章 二维图形
第9章 拖放
第10章 项视图类
第11章 容器类
第12章 输入与输出
12.1 读取和写入二进制数据
第13章 数据库
第14章 多线程
第15章 网络
15.1写FTP客户端
第16章 XML
16.1 使用QXmlStreamReader读取XML
第17章 提供在线帮助
第三部分 Qt高级============================================
第18章 国际化
第19章 自定义外观
第20章 三维图形
第21章 创建插件
第22章 应用程序脚本
第23章 平台相关特性
第24章 嵌入式编程
24.1 从Ot／Embedded Linux开始
第四部分 附录
附录A Qt的获取和安装
附录B 编译Qt应用程序
附录C Qt Jambi简介
附录D 面向Java和C#程序员的C++简介
D.1 C++入门
D.2 主要语言之间的差异
D.3 c++标准库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++GUI Qt4编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++ GUI Qt 4编程
第一部分 Qt基础
第1章 Qt入门
1.1 Hello Qt
1.2 建立连接
1.3 窗口部件的布局
1.4 使用参考文档
第2章 创建对话框
2.1 子类化QDialog
2.2 深入介绍信号和槽
2.3 快速设计对话框
2.4 改变形状的对话框
2.5 动态对话框
2.6 内置的窗口部件类和对话框类
第3章 创建主窗口
3.1 子类化QMainWindow
3.2 创建菜单和工具栏
3.3 设置状态栏
3.4 实现File菜单
3.5 使用对话框
3.6 存储设置
3.7 多文档
3.8 程序启动画面
第4章 实现应用程序的功能
4.1 中央窗口部件
4.2 子类化QTableWidget
4.3 载入和保存
4.4 实现Edit菜单
4.5 实现其他菜单
4.6 子类化QTableWidgetItem
第5章 创建自定义窗口部件
5.1 自定义Qt窗口部件
5.2 子类化QWidget
5.3 在Qt设计师中集成自定义窗口部件
5.4 双缓冲
第二部分 Qt中级
第6章 布局管理
6.1 在窗体中摆放窗口部件
6.2 分组布局
6.3 切分窗口
6.4 滚动区域
6.5 停靠窗口和工具栏
6.6 多文档界面
第7章 事件处理
7.1 重新实现事件处理器
7.2 安装事件过滤器
7.3 处理密集时的响应保持
第8章 二维图形
8.1 用QPainter绘图
8.2 坐标系统变换
8.3 用QImage高质量绘图
8.4 基于项的图形视图
8.5 打印
第9章 拖放
9.1 使拖放生效
9.2 支持自定义拖动类型
9.3 剪贴板处理技术
第10章 项视图类
10.1 使用项视图的简便类
10.2 使用预定义模型
10.3 实现自定义模型
10.4 实现自定义委托
第11章 容器类
11.1 连续容器
11.2 关联容器
11.3 通用算法
11.4 字符串、字节数组和变量
第12章 输入与输出
12.1 读取和写入二进制数据
12.2 读取和写入文本
12.3 遍历目录
12.4 嵌入资源
12.5 进程间通信
第13章 数据库
13.1 连接和查询
13.2 查看表
13.3 使用窗体编辑记录
13.4 在表中显示数据
第14章 多线程
14.1 创建线程
14.2 同步线程
14.3 与主线程通信
14.4 在次线程中使用Qt的类
第15章 网络
15.1 写FTP客户端
15.2 写HTTP客户端
15.3 写TCP客户/服务器应用程序
15.4 发送和接收UDP数据报
第16章 XML
16.1 使用QXmlStreamReader读取XML
16.2 用DOM读取XML
16.3 使用SAX读取XML
16.4 写入XML
第17章 提供在线帮助
17.1 工具提示、状态提示和“What?s This?”帮助
17.2 利用Web浏览器提供在线帮助
17.3 将QTextBrowser作为简单的帮助引擎
17.4 使用Qt Assistant提供强大的在线帮助
第三部分 Qt高级
第18章 国际化
18.1 使用Unicode
18.2 让应用程序感知翻译
18.3 动态切换语言
18.4 翻译应用程序
第19章 自定义外观
19.1 使用Qt样式表
19.2 子类化QStyle
第20章 三维图形
20.1 使用OpenGL绘图
20.2 OpenGL和QPainter的结合
20.3 使用帧缓存对象生成叠加
第21章 创建插件
21.1 利用插件扩展Qt
21.2 使应用程序感知插件
21.3 编写应用程序的插件
第22章 应用程序脚本
22.1 ECMAScript语言概述
22.2 使用脚本扩展Qt应用程序
22.3 使用脚本实现GUI扩展
22.4 使用脚本自动化处理任务
第23章 平台相关特性
23.1 连接本地的应用程序编程接口
23.2 在Windows上使用ActiveX
23.3 处理X11会话管理
第24章 嵌入式编程
24.1 从Qt/Embedded Linux开始
24.2 自定义Qt/Embedded Linux
24.3 Qt应用程序与Qtopia的集成
24.4 使用Qtopia的API
第四部分 附录
附录A Qt的获取和安装
A.1 协议说明
A.2 Qt/Windows的安装
A.3 Qt/Mac的安装
A.4 Qt/X11的安装
附录B 编译Qt应用程序
B.1 使用qmake
B.2 使用第三方编译工具
附录C Qt Jambi简介
C.1 Qt Jambi入门
C.2 在Eclipse IDE中使用Qt Jambi
C.3 在Qt Jambi中集成C++组件
附录D 面向Java和C#程序员的C++简介
D.1 C++入门
D.2 主要语言之间的差异
D.3 C++标准库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++ GUI Qt 4编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt Quick核心编程
第1章  Qt Quick概览	1
1.1  什么是Qt Quick	1
1.2  我们能用Qt Quick做什么	2
第2章  Qt开发环境快速上手	3
2.1  Qt Creator简介	3
2.2  Qt Creator下载与安装	3
2.2.1  下载	3
2.2.2  安装	4
2.3  Hello Qt Quick App	8
2.3.1  创建项目	8
2.3.2  运行项目	11
2.3.3  在手机上运行	12
2.4  Qt Creator集成开发环境	15
2.4.1  欢迎界面	15
2.4.2  编辑界面	18
2.4.3  调试界面	19
2.4.4  项目选项设置	20
2.5  善用佳软之Qt Quick开发工具	21
2.5.1  Qt帮助	21
2.5.2  Qt Quick Designer	24
2.5.3  命令行环境	25
2.5.4  qmlscene	26
第3章  QML语言基础	28
3.1  对象	28
3.2  表达式	29
3.3  注释	30
3.4  属性	31
3.4.1  属性命名	31
3.4.2  属性的类型	31
第4章  Qt Quick入门	35
4.1  Hello Qt Quick App再分析	35
4.1.1  基本程序结构	35
4.1.2  使用Item作为QML根对象	37
4.2  闲话Window	38
4.2.1  Window细说	38
4.2.2  ApplicationWindow	40
4.3  基本元素初体验	40
4.3.1  Rectangle	40
4.3.2  颜色	41
4.3.3  渐变色	41
4.3.4  Item	42
4.3.5  使用锚布局	44
4.3.6  响应按键	46
4.3.7  Text	47
4.3.8  Button	50
4.3.9  ButtonStyle	51
4.3.10  Image	52
4.3.11  BusyIndicator	55
4.4  图片浏览器的第一个版本	55
4.4.1  QML代码	56
4.4.2  FileDialog	58
第5章  ECMAScript初探	59
5.1  语法	60
5.1.1  区分大小写	60
5.1.2  弱类型	60
5.1.3  语句后的分号可有可无	61
5.1.4  注释	61
5.1.5  代码块	61
5.2  变量	61
5.2.1  变量声明	61
5.2.2  变量命名规则	62
5.2.3  关键字	62
5.2.4  保留字	63
5.2.5  原始值与引用值	64
5.3  原始类型	64
5.3.1  typeof运算符	64
5.3.2  Undefined类型	65
5.3.3  Null类型	65
5.3.4  Boolean类型	66
5.3.5  Number类型	66
5.3.6  String类型	67
5.4  类型转换	67
5.4.1  转换成字符串	68
5.4.2  转换成数字	68
5.4.3  强制类型转换	69
5.5  对象	70
5.5.1  Object	70
5.5.2  String	72
5.5.3  RegExp	75
5.5.4  Array	78
5.5.5  Math	80
5.5.6  Date	81
5.5.7  你不可不知的对象碎碎念	83
5.6  函数	84
5.6.1  函数语法	84
5.6.2  函数的返回值	85
5.7  表达式和运算符	85
5.7.1  表达式	85
5.7.2  算术运算符	86
5.7.3  赋值运算符	86
5.7.4  比较和逻辑运算符	87
5.7.5  条件运算符	88
5.7.6  位运算符	88
5.7.7  关键字运算符	88
5.7.8  逗号运算符	89
5.7.9  数组和对象存取运算符	89
5.7.10  优先级	89
5.8  程序控制语句	90
5.8.1  if-else语句	90
5.8.2  switch语句	90
5.8.3  for语句	91
5.8.4  while语句	92
5.8.5  do-while语句	92
5.8.6  break、continue和return	92
5.9  使用console	93
5.9.1  输出日志信息	93
5.9.2  断言		94
5.9.3  计时器	94
5.10  内置对象	94
5.10.1  Global对象	94
5.10.2  JSON对象	96
5.11  来自QML的基本类型	98
5.11.1  url	99
5.11.2  list	99
5.11.3  enumeration	100
5.11.4  font	100
5.12  宿主对象Qt	101
5.12.1  Qt对象的属性	101
5.12.2  Qt对象的枚举类型	102
5.12.3  Qt对象的方法	102
第6章  Qt Quick事件处理	105
6.1  Qt Quick中的信号与槽	105
6.1.1  连接QML类型的已知信号	105
6.1.2  如何寻找感兴趣的信号	109
6.1.3  定义自己的信号	115
6.1.4  信号与槽的连接	117
6.2  鼠标	119
6.2.1  变色矩形示例	119
6.2.2  MouseArea	120
6.3  键盘	121
6.3.1  会动的文本实例	121
6.3.2  Keys与信号处理器	123
6.4  定时器	124
6.4.1  定时器对象介绍	124
6.4.2  倒计时程序	124
6.5  触摸事件	126
6.5.1  PinchArea	127
6.5.2  缩放与旋转实例	128
6.5.3  多点触摸	130
第7章  组件与动态对象	133
7.1  Component（组件）	133
7.1.1  嵌入式定义组件	133
7.1.2  在单独文件中定义组件	134
7.2  使用Loader	137
7.2.1  Loader详细介绍	137
7.2.2  从文件加载组件	142
7.2.3  利用Loader动态创建与销毁组件	143
7.3  在ECMAScript中动态创建对象	146
7.3.1  从组件文件动态创建Component	146
7.3.2  从QML字符串动态创建Component	148
7.3.3  销毁动态创建的对象	149
第8章  Qt Quick元素布局	152
8.1  定位器	152
8.1.1  Row	152
8.1.2  Colomun	154
8.1.3  Grid	155
8.1.4  Flow	158
8.1.5  定位器嵌套	160
8.2  布局管理器	162
8.2.1  GridLayout	163
8.2.2  RowLayout	166
8.2.3  ColumnLayout	168
8.3  其他的布局方式	169
第9章  Qt Quick常用元素介绍	170
9.1  行编辑（TextInput与TextField）	170
9.1.1  TextInput	170
9.1.2  TextField	172
9.2  文本块（TextEdit与TextArea）	172
9.2.1  TextEdit	173
9.2.2  TextArea	173
9.3  ExclusiveGroup	174
9.4  RaidoButton	174
9.4.1  RadioButtonStyle	174
9.4.2  实例：选择你喜欢的手机操作系统	175
9.5  CheckBox	177
9.5.1  CheckBoxStyle	178
9.5.2  实例：那些你喜欢的爱情电影	178
9.6  GroupBox	180
9.7  ComboBox	182
9.7.1  ComboBoxStyle	183
9.7.2  ComboBox综合演示	183
9.8  ProgressBar	187
9.8.1  ProgressBarStyle	187
9.8.2  进度条综合演示	188
9.9  TabView	191
9.9.1  标签控件简单示例	192
9.9.2  使用TabViewStyle	193
9.10  Slider	196
9.10.1  SliderStyle	197
9.10.2  滑块简单示例	197
9.11  Flickable	199
9.12  Screen对象	200
第10章  Canvas（画布）	202
10.1  开始之前	202
10.1.1  画布	202
10.1.2  画师	203
10.1.3  画笔	203
10.1.4  画刷	203
10.1.5  坐标系	203
10.1.6  图元	204
10.2  基本绘图模式	204
10.3  绘制路径	206
10.4  绘制文本	209
10.5  绘制图片	211
10.6  变换	215
10.7  裁切	219
10.8  图像合成	220
10.9  挖头像实例	221
10.9.1  项目创建	221
10.9.2  C++代码	222
10.9.3  QML代码分析	223
第11章  C++与QML混合编程	228
11.1  在QML中使用C++类和对象	229
11.1.1  定义可以导出的C++类	229
11.1.2  注册一个QML可用的类型	235
11.1.3  完整的ColorMaker实例	237
11.1.4  将一个C++对象导出为QML属性	239
11.2  在C++中使用QML对象	242
11.2.1  查找一个对象的孩子	243
11.2.2  使用元对象调用QML对象的方法	243
11.2.3  callQml示例	244
11.3  美图实例	248
11.3.1  美图实例效果	248
11.3.2  图像处理算法	250
11.3.3  源码情景分析	256
第12章  动画	264
12.1  动画元素分类	264
12.2  基本动画元素	265
12.2.1  Animation	265
12.2.2  PropertyAnimation	266
12.2.3  NumberAnimation	270
12.2.4  ColorAnimation	273
12.2.5  RotationAnimation	273
12.2.6  PathAnimation	275
12.2.7  SmoothedAnimation	278
12.2.8  SpringAnimation	279
12.3  组合动画	280
12.3.1  ParallelAnimation	280
12.3.2  SequentialAnimation	281
12.4  State	283
12.4.1  使用State变换文本的小示例	283
12.4.2  State详解	284
12.4.3  PropertyChanges	286
12.4.4  ParentChange	289
12.4.5  AnchorChanges	292
12.4.6  StateChangeScript	294
12.5  Transition	296
12.6  协同动画元素	302
12.6.1  Behavior	303
12.6.2  ParentAnimation	304
12.6.3  AnchorAnimation	305
12.7  实例：射泡泡游戏	306
12.7.1  游戏介绍	307
12.7.2  源码情景分析	310
第13章  Model/View	318
13.1  ListView	319
13.1.1  ListView的简单使用	319
13.1.2  header	323
13.1.3  footer	326
13.1.4  访问与修改Model	330
13.1.5  动画效果	336
13.1.6  section	343
13.2  XmlListModel的用法	347
13.2.1  XPath简介	347
13.2.2  XmlRole	349
13.2.3  XmlListModel的属性与方法	349
13.3  使用C++ Model	354
13.3.1  C++实现QML可用的Model	354
13.3.2  将Model导出到QML中	359
13.3.3  QML代码的变化	360
13.4  TableView	362
13.4.1  一个简单的TableView实例	362
13.4.2  定制表格外观	364
13.4.3  动态修改TableView	368
13.5  实例：股票跟踪	368
13.5.1  你的样子	369
13.5.2  项目创建	370
13.5.3  main.cpp分析	372
13.5.4  TableView外观定制	373
13.5.5  QML与C++混合应用的国际化	375
13.5.6  Qt on Android应用国际化	376
13.6  GridView	377
13.7  PathView	379
13.7.1  Path简介	380
13.7.2  PathAttribute	385
13.7.3  PathPercent	386
13.7.4  使用PathView	386
13.8  找图看实例	390
13.8.1  功能与界面	390
13.8.2  QML多界面切换	392
13.8.3  创建自己的QML按钮	394
13.8.4  本地浏览	395
13.8.5  网络图片搜索	399
13.9  Repeater	400
13.9.1  model为数字	400
13.9.2  model为字符串列表	401
13.9.3  model为对象列表	402
13.9.4  model为ListModel	403
13.10  ListView的下拉刷新效果	405
13.10.1  C++ Model	405
13.10.2  QML代码分析	408
第14章  多媒体	410
14.1  MediaPlayer	410
14.1.1  播放音乐	410
14.1.2  视频	413
14.1.3  多媒体元信息	414
14.2  拍照	415
14.2.1  配置Camera	415
14.2.2  设置取景器VideoOutput	418
14.2.3  捕获静态图片	419
14.2.4  简单的拍照实例	419
第15章  网络	426
15.1  大珠小珠落玉盘——支持网络的对象	426
15.1.1  Image	426
15.1.2  Qt.createComponent	426
15.1.3  Loader对象	427
15.1.4  QQmlApplicationEngine	427
15.1.5  QQuickView	427
15.1.6  MediaPlayer	428
15.2  QML里的HTTP	428
15.2.1  XMLHttpRequest类介绍	428
15.2.2  GET小示例	430
15.2.3  POST数据	433
15.3  使用C++代码完成复杂的网络操作	433
第16章  定位	435
16.1  类库介绍	435
16.1.1  coordinate	435
16.1.2  QtPositioning	436
16.1.3  Position	436
16.1.4  PositionSource	436
16.2  团购查询实例	437
16.2.1  百度API说明	437
16.2.2  手机运行效果	438
16.2.3  源码分析	439
第17章  综合实例之文件查看器	443
17.1  文件查看器的运行效果	444
17.2  再论ApplicationWindow	445
17.3  MenuBar	447
17.3.1  Menu	447
17.3.2  MenuItem	448
17.3.3  Action	448
17.4  ToolBar	449
17.5  使用XMLHttpRequest加载本地文件	450
17.6  使用标准对话框	450
17.6.1  ColorDialog	451
17.6.2  MessageDialog	452
17.7  源码分析	453
17.7.1  QML代码	453
17.7.2  C++代码	461
17.7.3  项目文件	461
第18章  综合实例之聊哈	462
18.1  界面效果	462
18.2  分析	465
18.2.1  适应多种分辨率	465
18.2.2  聊天界面实现分析	469
18.2.3  录音与回放	471
18.2.4  聊天协议	475
18.2.5  MessengerManager	485
18.2.6  AccessPointModel	486
附录A  常见问题	487
该怎么学习Qt Quick	487
如何发布Qt Quick应用	487
怎样保持Android手机屏幕常亮	489
我想创建可扩展的UI来适应各种屏幕	489
Qt Quick应用如何国际化	490
Qt Quick应用体积太大了啊	490
有没有静态库版本的Qt	490
我不想让别人看见我的QML文档	490
Android上的Qt Quick控件看起来和系统风格不一样	490
自己做一些Qt Quick控件怎么样	491
Qt Quick不支持文件操作吗	491
想用数据库来着……	491
说真的，本书示例代码在哪儿可以下载	491
参考文献	492
聊聊写作期间听的音乐	493
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt Quick核心编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>24小时学通Qt编程
第一部分　Qt基础知识
第1学时　Qt简介
1. 1　选择Qt库
1. 1. 1　可移植性
1.　1. 2　易用性
1. 1. 3　运行速度
1. 2　安装Qt库

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>24小时学通Qt编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI快速编程
第一部分 Python编程
第1章 数据类型和数据结构
1．1 执行Python代码
1．2 变量和对象
1．3 数字和字符串
1．3．1 整数和长整型
1．3．2 浮点数和小数
1．3．3 字节字符串、 Unicode字符串和QString
1．4 集合
1．4．1 元组
1．4．2 列表
1．4．3 字典
1．4．4 集
1．5 内置函数
小结
练习题
第2章 控制结构
2．1 条件分支
2．2 循环
列表解析和生成器
2．3 函数
2．3．1 生成器函数
2．3．2 关键字参数的使用
2．3．3 lambda函数
2．3．4 动态函数的创建
2．3．5 偏函数应用程序
2．4 异常处理
小结
练习题
第3章 类和模块
3．1 实例的创建
3．2 方法和特殊方法
3．2．1 静态数据、 静态方法和装饰器
3．2．2 例： Length类
3．2．3 集合类
3．2．4 例： OrderedDict类
3．3 继承和多态
3．4 模块和多文件应用程序
小结
练习题
第二部分 GUI编程基础
第4章 GUI编程简介
4．1 25行的弹出式闹钟
4．2 30行的表达式求值程序
4．3 70行的货币转换程序
4．4 信号和槽
小结
练习题
第5章 对话框
5．1 简易对话框
5．2 标准对话框
OK/Cancel型模态对话框
5．3 智能对话框
5．3．1 非模态应用/关闭型对话框
5．3．2 非模态的实时对话框
小结
练习题
第6章 主窗口
6．1 主窗口的创建
6．1．1 动作和按键顺序
6．1．2 资源文件
6．1．3 创建和使用动作
6．1．4 恢复和保存主窗口的状态
6．2 用户动作的处理
6．2．1 文件动作的处理
6．2．2 编辑动作的处理
6．2．3 帮助动作的处理
小结
练习题
第7章 使用Qt设计师
7．1 用户界面的设计
7．2 对话框的实现
7．3 对话框的测试
小结
练习题
第8章 数据处理和自定义文件格式
8．1 主窗口的职责
8．2 数据容器的职责
8．3 二进制文件的保存和加载
8．3．1 用QDataStream读写
8．3．2 使用pickle模块读写
8．4 文本文件的保存和加载
8．4．1 使用QTextStream读写
8．4．2 使用codecs模块读写
8．5 XML文件的保存和加载
8．5．1 XML的写
8．5．2 用PyQt的DOM类来读取和解析XML
8．5．3 用PyQt的SAX类读取和解析XML
小结
练习题
第三部分 中级GUI编程
第9章 布局和多文档
9．1 布局策略
9．2 Tab标签页窗口部件和堆叠窗口部件
9．3 窗口切分条
9．4 单文档界面（SDI）
9．5 多文档界面（MDI）
小结
练习题第10章 事件、 剪贴板和拖放
10．1 事件处理机制
10．2 重新实现事件处理程序
10．3 使用剪贴板
10．4 拖放
小结
练习题第11章 自定义窗口部件
11．1 使用窗口部件样式表
11．2 创建复合窗口部件
11．3 子类化内置窗口部件
11．4 子类化QWidget
11．4．1 例： 分数滑块
11．4．2 例： 流体混合窗口部件
小结
练习题第12章 基于项的图形
12．1 图形项的自定义和交互
12．2 动画和复杂形状
小结
练习题第13章 Rich文本和打印
13．1 Rich文本的编辑
13．1．1 使用QSyntaxHighlighter
13．1．2 Rich文本的行编辑
13．2 文档打印
13．2．1 图片的打印
13．2．2 使用HTML和QTextDocument打印文档
13．2．3 使用QTextCursor和QTextDocument打印文档
13．2．4 使用QPainter打印文档
小结
练习题第14章 模型/视图编程
14．1 使用简便项窗口部件
14．2 创建自定义模型
14．2．1 实现视图逻辑
14．2．2 实现自定义模型
14．3 创建自定义委托
小结
练习题第15章 数据库
15．1 连接数据库
15．2 执行SQL查询
15．3 使用数据库窗体视图
15．4 使用数据库表视图
小结
练习题
第四部分 高级GUI编程
第16章 高级模型/视图编程
16．1 自定义视图
16．2 泛型委托
16．3 树中表达表格数据
小结
练习题
第17章 在线帮助和国际化
17．1 在线帮助
17．2 国际化
小结
练习题
第18章 网络应用
18．1 创建TCP客户端
18．2 创建TCP服务器
小结
练习题
第19章 多线程
19．1 创建线程服务器
19．2 创建和管理次线程
19．3 实现次线程
小结
练习题
这并非结束
附录A 安装
附录B PyQt的部分窗口部件
附录C 部分PyQt类的层次
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI快速编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt on Android 核心编程
第1章  Qt概览	1
欢迎来到Qt的世界，让我们看看Qt是什么，能给我们带来什么，又有谁在使用Qt。我们要约会的Qt on Android，它缘起何处，有着怎样曲折婉转的历史，如今的小模样能否让我们爱之如狂……
1.1  什么是Qt	1
1.2  我们能用Qt做什么	1
1.3  谁在使用Qt	1
1.4  什么是Qt on Android	2
1.5  Qt on Android的前世今生	2
第2章  Qt开发环境快速上手	6
当你遇见了合适的人，开始筹划第一次约会，又是兴奋又是惆怅，要不要买花，去哪里买礼物，穿什么衣服，洒什么香水，带什么应对意外的小物件，该不该了解可能要去的地方环境如何……一切都为了顺利地完成这事关紧要的第一次。我精心准备了Qt入门的一切，微笑着欢迎你的来访。
2.1  Qt Creator简介	6
2.2  Qt Creator下载与安装	7
2.2.1  下载	7
2.2.2  安装	7
2.3  创建第一个项目：Hello World	9
2.4  Qt Creator集成开发环境介绍	13
2.4.1  欢迎界面	13
2.4.2  编辑界面	16
2.4.3  调试界面	17
2.4.4  项目选项设置	18
2.4.5  菜单简介	19
2.4.6  Qt Creator的选项配置	21
2.4.7  项目模板介绍	22
2.5  Qt开发工具介绍	25
2.5.1  Assistant	25
2.5.2  Designer	29
2.5.3  Linguist	30
2.5.4  命令行环境	30
第3章  Qt on Android快速上手	32
风，起于青萍之末，升降于云际本土，志高远而固磐。Qt跨界牵手Android，带给我们一种新的可能与希冀，这种欣欣然还需落到实处，从准备环境开始，从第一声Hello开始，学会必要的调试手段，向着部署向着发布而去……
3.1  开发环境搭建	32
3.1.1  JDK安装	32
3.1.2  环境变量设置	34
3.1.3  Android SDK安装	36
3.1.4  Android NDK安装	41
3.1.5  Apache Ant安装	41
3.1.6  Qt Creator的Android环境配置	42
3.1.7  AVD创建	44
3.1.8  连接你的手机	46
3.2  Hello Qt on Android	47
3.2.1  创建项目	47
3.2.2  项目选项	50
3.2.3  创建密钥文件和证书	53
3.2.4  创建AndroidManifest.xml	55
3.2.5  添加代码	53
3.2.6  运行程序	55
3.3  Qt库的部署策略	57
3.3.1  Use Ministro service to install Qt	58
3.3.2  Bundle Qt libs in APK	59
3.3.3  Deploy local Qt libraries to temporary directory	60
3.4  日志	62
3.4.1  为什么要有日志	63
3.4.2  在Qt中如何使用日志	63
3.4.3  如何把日志输出到Android日志系统中	64
第4章  Qt项目文件介绍	67
有些顶顶重要的，却总被忽视，pro文件就是那个悲催的备胎啊，满含深情一路追随着你，你却只在受伤时想起它值得珍惜。噢，没关系，你看我十八般武艺万种风情，只默默地在你身边伫立，期待着你书到用时回眸一笑。
4.1  pro文件介绍	67
4.1.1  注释	68
4.1.2  组件选择	68
4.1.3  目标文件名	68
4.1.4  模板	69
4.1.5  指定源文件	69
4.1.6  指定头文件	70
4.1.7  设置头文件路径	70
4.1.8  指定库与库文件路径	70
4.1.9  定义宏	70
4.1.10  配置信息	71
4.1.11  代码块与条件测试	72
4.1.12  变量	74
4.2  pro.user文件	75
4.3  pri文件	75
4.4  Makefile	75
第5章  Qt入门	76
我们扔掉了纸尿裤，走出了Qt的第一步，兴奋地挥舞着小手颠颠儿着跑起来了，身边那些花儿，招呼一声吧。你好，QWidget；你好，QLabel；你好，QPushButton；你好，亲的信号与槽；你好，布局管理器……你看，它们回应你了，仿佛在说，你若安好，便是晴天。
5.1  Hello World再分析	76
5.2  QuitApp：带交互的小程序	77
5.3  初识信号与槽	79
5.4  构建复杂界面	80
5.4.1  盖洛普Q12测评程序	80
5.4.2  创建自己的槽	85
5.4.3  布局管理器介绍	85
5.4.4  控件回顾	88
5.5  追随Qt的代码风格	91
第6章  元对象系统	92
Qt的根基就在元对象系统，唯有修好内功，各种招式方可如臂使指，信手拈来。就让我们抽丝剥茧，以无刃入有间，看看signals、slots、emit、SLOT、SIGNAL这些Qt的繁花，就让我们跟着moc走上一遭，就让我们看看信号如何唤起阿槽，就让我们练练事件与过滤器的绝招……
6.1  牡丹花示例	93
6.2  再论编译过程	95
6.3  Q_OBJECT宏	96
6.4  QMetaObject	97
6.5  关键字signals、slots、emit、SIGNALS、SLOTS	97
6.5.1  signals	97
6.5.2  emit	98
6.5.3  slots	98
6.5.4  SIGNALS	98
6.5.5  SLOTS	98
6.6  moc的魔法	99
6.6.1  moc_peony.cpp的源码	99
6.6.2  moc的工作清单	101
6.6.3  信号的真容	101
6.6.4  信号与槽的约会	102
6.7  深入理解信号与槽	107
6.7.1  信号与槽原理	107
6.7.2  如何使用信号与槽	108
6.7.3  信号与槽的连接类型	109
6.7.4  信号与槽经验谈	110
6.7.5  跨线程使用信号与槽	110
6.8  属性系统	114
6.8.1  静态属性	114
6.8.2  动态（运行时）属性	117
6.9  事件和事件过滤器	118
6.9.1  重写event()	119
6.9.2  重写特定事件处理器	120
6.9.3  事件过滤器	120
6.9.4  自定义事件	122
6.10  定时器事件	124
6.10.1  使用QTimer	125
6.10.2  使用QObject::startTimer	125
6.11  对象树与生命周期	126
6.12  智能指针	131
6.12.1  QPointer	131
6.12.2  QSharedPointer	132
6.12.3  QWeakPointer	133
6.12.4  QScopedPointer	134
6.12.5  QObjectCleanupHandler	135
6.13  动态类型转换	136
6.14  国际化	136
6.14.1  字符串国际化方法	137
6.14.2  创建译本	138
6.14.3  装载译文文件	138
6.14.4  运行时改变语言	138
第7章  Qt模板库介绍	140
你离不开的，不只有空气、网络、微信、智能手机，还有接纳千言万语的QString，还有环环相扣的QList，还有你侬我侬的QMap，以及那些胸有千千壑可容万万对象的容器们。
7.1  使用QString	140
7.1.1  初始化一个字符串	141
7.1.2  操作字符串数据	141
7.1.3  字符串查询	142
7.1.4  编码转换	142
7.1.5  格式化输出	143
7.2  容器类	143
7.2.1  QList示例	144
7.2.2  QMap示例	146
第8章  Qt GUI编程	148
阿里巴巴进入了四十大盗的山洞，里面都有什么宝贝呢？单选按钮复选框，行编辑与分组框，列表和表格，文本框携手选项卡……你总是说，我要更多还要更美，QPainter会给你画笔，给你颜色，给你想不到的美好。
8.1  智能手机GUI特点	148
8.2  内建窗口控件介绍	149
8.2.1  QRadioButton	149
8.2.2  QCheckBox	150
8.2.3  QGroupBox	150
8.2.4  QLineEdit	152
8.2.5  QTextEdit	153
8.2.6  QTabWidget	154
8.2.7  QListWidget	155
8.2.8  Qt资源文件系统	158
8.2.9  QTableWidget	160
8.3  自定义窗口部件	166
8.3.1  使用QPainter绘图	166
8.3.2  为Android实现的ImageButton	167
8.3.3  文字渐变标签	169
第9章  多线程	174
上路吧，线程，请引领我们进入并行世界，那骑着单车看夕阳的时代已只堪怀念。低阶的QThread赐予我们强大的控制力，它的事件循环会开启潘多拉的盒子，跨线程的通信如此美丽。QThreadPool省却了我们繁重的手工，而QtConcurrent则在高屋建瓴，势必让我们使用并发不费吹灰之力。
9.1  上路吧，线程	174
9.2  线程自己的事件循环	176
9.3  岂能老死不相往来——线程间通信	177
9.3.1  跨线程的信号与槽	177
9.3.2  跨线程的事件	178
9.3.3  门铃示例程序	178
9.4  线程同步	182
9.5  使用QThread的注意事项	184
9.6  QThreadPool	184
9.7  高阶多线程API：QtConcurrent	185
第10章  网络编程	189
互联网的蓬勃发展从1995年开始，距今已有将近20年。2008年6月，iPhone 3G发布，开启移动互联网新纪元，距今已有7年。网络已经成为我们感知世界的重要神经元。在Qt的世界里，QNetworkAccessManager让网络连接与访问变得一致而简单，而QTcpSocket与QUdpSocket则为你扫清了socket的纷繁复杂，让你可以优雅地打造你的专属服务。
10.1  QNetworkAccessManager	189
10.1.1  http编程	190
10.1.2  ftp编程	198
10.2  QTcpSocket/QTcpServer	201
10.2.1  服务器	203
10.2.2  客户端	205
10.3  QUdpSocket	207
10.3.1  服务器	207
10.3.2  客户端	209
第11章  文件IO	211
我想要有个家，一个不需要华丽的地方，在我疲倦的时候我会想到它。在计算机的虚拟世界，那些在内存中运行的应用软件，它们有一个不变的根，就是文件。原始的文件操作艰涩难懂，而Qt提供的QFile、QTextStream、QDataStream这IO三剑客，化复杂为简单优雅。
11.1  QFile	211
11.2  QTextStream	214
11.3  QDataStream	215
第12章  XML	217
1998年2月，XML标准正式出炉，从此我们可以用它对文档和数据进行结构化处理，各种文件格式方言鱼龙混杂浮云蔽日的时代渐行渐远。多么美好的时代，Qt提供了DOM、SAX、StAX三种常见的XML处理模式，热情地支持我们说同一种语言。
12.1  XML读取与解析	217
12.1.1  DOM	218
12.1.2  SAX	219
12.1.3  StAX	223
12.2  XML文档生成与保存	226
12.2.1  QXmlStreamWriter	226
12.2.2  QDomNode::save()	227
12.2.3  疯狂原始人的方式	228
第13章  Qt on Android揭秘	229
也许你已经寻寻觅觅寻不到，Qt on Android的讯息。其实我一直在灯火阑珊处等你，现在就让我们点燃火把，做一回武陵捕鱼人，去寻桃花源。我们不仅要亲历Qt on Android应用的诞生过程，还要陪着它穿越JNI的逼仄入口，来到豁然开朗、美池桑竹各有其属的Qt王国。
13.1  APK是怎样炼成的	229
13.1.1  当你“运行”时	230
13.1.2  Android项目目录结构	232
13.1.3  string.xml介绍	233
13.1.4  AndroidManifest.xml介绍	233
13.1.5  libs.xml介绍	238
13.1.6  Androiddeployqt.exe都干了什么	239
13.2  Java与Qt的结合过程	242
13.2.1  应用入口	242
13.2.2  通信代理	245
13.2.3  QPA插件	248
13.3  Qt应用的状态	252
第14章  Android移动开发主题	253
江湖之远，庙堂之高，各有其运行规则。移动开发这片新天地，让我们不得不重新审视自己：怎么处理BACK键，如何回应纤纤玉指多情的触摸，怎样在传感器的迷宫中穿梭，面对拍照的需求能否响应，在水一方的伊人想玉笛暗飞声我们要不要十二万分热情地支持……
14.1  按键处理	253
14.1.1  重写keyPressEvent/keyReleaseEvent	254
14.1.2  给子控件安装事件过滤器	255
14.1.3  应用级别的事件过滤器	256
14.2  触摸与手势	258
14.2.1  触摸	258
14.2.2  手势	263
14.3  传感器与手势	264
14.3.1  常见传感器介绍	264
14.3.2  Qt传感器手势类库介绍	268
14.3.3  摇动手势	268
14.3.4  覆盖手势	269
14.3.5  自由落体	269
14.3.6  缠绕手势	269
14.3.7  翻转手势	269
14.3.8  扇动手势	270
14.3.9  传感器手势的使用	270
14.4  拍照	271
14.4.1  QCamera和它的小伙伴	271
14.4.2  QCameraViewFinder	273
14.4.3  QCameraImageCapture	273
14.4.4  使用相机拍照	274
14.4.5  在QML应用中使用相机	277
14.5  录音与回放	278
14.5.1  录音类库	278
14.5.2  播放类库	279
14.5.3  录音与回放小示例	279
第15章  使用JNI扩展你的应用	286
Qt强则强矣，雅则雅矣，毕竟也有力不能及之时，所谓天长地久有时尽，不应有恨月常圆。Qt为Android准备了QAndoidJniObject和QAndroidJniEnviroment两枚神器，借助它们，你就可以提升你的念力，请来Android平台的诸位神仙样人物帮你完成看似不可能的任务。
15.1  使用JNI Environment	286
15.2  调用Java代码	287
15.2.1  Java方法签名	288
15.2.2  调用Java方法	289
15.2.3  extendsQtWithJava实例	291
15.2.4  QtAndroid名字空间	298
15.2.5  使用手机外部存储	298
15.3  Java调用C++	299
第16章  纸上得来终觉浅，绝知此事要躬行	305
历15章之漫长，终于可以携剑下天山，就让我们红尘作伴，活得潇潇洒洒，策马奔腾，共享人世繁华。音乐，图片，笔记，拍照与美图，天气，查IP剖Json，这些，所有这些应用的出生与成长，我们将共同经历，一路上有你，苦一点也愿意……
16.1  笔记qnotepad	306
16.1.1  首页设计与实现	308
16.1.2  笔记对象	316
16.1.3  笔记浏览与编辑	318
16.2  图片浏览器	324
16.2.1  文件选择控件	324
16.2.2  图片加载器	335
16.2.3  图片显示	344
16.3  IP地址查询	351
16.3.1  Json数据格式简介	352
16.3.2  Qt中的Json类库	352
16.3.3  程序详解	353
16.4  音乐播放器	358
16.4.1  云想衣裳花想容——Qt样式表	359
16.4.2  多媒体类库介绍	361
16.4.3  音乐播放器详解	362
16.5  天气预报	380
16.5.1  云中谁寄锦书来——GPS定位	382
16.5.2  天气查询与显示	387
16.6  拍照与后期处理	396
16.6.1  方寸天地纳缱绻，楚楚蕴秀薄纸间	398
16.6.2  图像处理算法	401
16.6.3  图片加载与显示	410
16.6.4  组织部长	413
附录A  常见问题	420
参考文献	427
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt on Android 核心编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt 5开发实战
第1章　概述　　1
第2章　有用的工具和qmake　　6
2.1　Qt Creator IDE　　6
2.2　Qt Assistant　　14
2.3　Qt Designer　　15
2.4　qmake　　16
第3章　GUI设计与制作　　19
3.1　基础控件　　19
3.1.1　QCheckBox和QButtonGroup　　22
3.1.2　QComboBox　　25
3.1.3　QCommandLinkButton　　26
3.1.4　QDate类和QDateEdit控件　　27
3.1.5　QTime类和QTimeEdit控件　　30
3.1.6　QDateTime类和QDateTimeEdit控件　　33
3.1.7　QDial　　35
3.1.8　QSpinBox和QDoubleSpinBox 　　36
3.1.9　QPushButton和QFocusFrame　　39
3.1.10　QFontComboBox 　　41
3.1.11　QLabel和QLCDNumber　　43
3.1.12　QLineEdit　　45
3.1.13　QMenu和QMenuBar 　　47
3.1.14　QProgressBar　　50
3.1.15　QRadioButton　　51
3.1.16　QScrollArea　　52
3.1.17　QScrollBar　　53
3.1.18　QSizeGrip　　55
3.1.19　QSlider　　57
3.1.20　QTabWidget 　　58
3.1.21　QToolBar和QAction　　 60
3.1.22　QWidget　　 62
3.1.23　QTabBar　　 67
3.1.24　QToolBox　　 68
3.1.25　QToolButton　　 69
3.2　布局管理器　　 70
3.3　高级控件　　 73
3.3.1　QColumnView　　 74
3.3.2　QDataWidgetMapper　　 75
3.3.3　QDesktopWidget　　 77
3.3.4　QCalendarWidget　　 79
3.4　使用Designer构建GUI　　 81
3.4.1　控件和信号槽使用示例　　 84
3.4.2　Calculator Form示例　　 86
3.5　对话框　　 88
3.5.1　普通对话框　　 88
3.5.2　用户自定义对话框　　 97
3.6　主窗口　　 98
3.7　模型/视图结构和数据绑定控件　　 101
3.7.1　模型/视图结构　　 102
3.7.2　使用模型类和视图控件　　 103
3.8　用户自定义控件和插件　　 107
3.8.1　实现用户自定义控件　　 109
3.8.2　插件制作及布局　　 118
第4章　信号与槽　　 128
第5章　数据类型和有用的数据操作类　　 131
5.1　比较和判断变量的函数　　 133
5.2　数据类　　 136
5.3　容器类　　 154
5.4　字符串类　　 159
第6章　文件输入输出　　163
第7章　图形　　171
7.1　使用QPainter类的图形　　171
7.1.1　QPainter的基本绘图　　172
7.1.2　渐变　　179
7.1.3　转换　　182
7.1.4　组合　　184
7.2　图形视图框架　　185
7.2.1　图形视图架构　　187
7.2.2　图形视图的坐标　　190
7.2.3　图形视图的主要特点　　191
7.2.4　事件处理　　193
7.2.5　用户自定义QGraphicsItem 　　194
7.2.6　QGraphicsEffect 　　197
7.3　使用Qt OpenGL模块的3D 图形　　202
7.3.1　用于渲染3D图形的QGLWidget类　　203
7.3.2　Hello OpenGL示例　　206
7.3.3　使用硬盘加速器的2D图形渲染　　212
7.3.4　QPainter类的复绘　　218
7.4　可缩放向量图形　　224
第8章　动画框架和状态机　　227
8.1　动画框架和类　　228
8.2　动画和状态机　　235
第9章　线程　　238
9.1　QThread类　　242
9.2　多线程编程　　244
9.3　线程等待条件　　247
9.4　使用信号量进行同步　　249
9.5　使用QtConcurrent的多线程　　252
第10章　容器类和迭代器类　　254
10.1　Java风格的迭代器模式　　255
10.2　STL风格的迭代器模式　　257
10.3　使用foreach关键字访问迭代器　　259
第11章　XML　　261
11.1　使用数据流的XML数据处理　　263
11.2　文档对象模型（DOM） 　　266
11.3　SAX模式　　269
第12章　数据传输和网络编程　　273
12.1　网络　　273
12.1.1　使用QTcpSocket和QTcpServer进行TCP编程　　277
12.1.2　使用QUdpSocket的UDP 　　285
12.1.3　主机名和DNS查询　　291
12.1.4　HTTP协议　　297
12.1.5　承载管理　　306
12.1.6　基于服务器端/客户端的聊天示例　　307
12.2　QtWebKit　　314
12.2.1　QtWebKit 模块提供的类　　316
12.2.2　DOM 查询　　323
12.2.3　QtWebKit模块环境下的JQuery应用　　325
12.2.4　QtWebKit和QObject模型间的网桥　　330
12.2.5　混合客户端应用程序示例　　336
12.3　进程间通信　　339
12.3.1　TCP/IP　　340
12.3.2　共享内存　　341
12.3.3　D-Bus协议　　346
12.3.4　QProcess　　353
第13章　多媒体　　355
13.1　音频组件　　356
13.2　视频组件　　359
13.3　camera组件　　362
13.4　收音机组件　　364
第14章　数据库　　365
14.1　数据库和SQL简介　　367
14.2　关联和支持数据库的驱动　　369
14.3　使用SQL语句的数据库查询　　377
14.4　Model类　　383
14.5　列表视图应用　　386
14.6　SQL 记录文件字段和GUI 控件映射　　388
14.7　Cached列表示例　　392
14.8　Drill Down示例　　395
第15章　Qt测试框架　　405
15.1　单元测试　　409
15.2　数据驱动测试　　410
15.3　模拟GUI事件　　412
15.4　GUI事件重复测试　　414
15.5　基准测试　　415
第16章　Qt Quick与QML　　418
16.1　Qt Quick项目创建和有用的工具　　419
16.2　基本类型和扩展数据类型　　421
16.3　对象　　427
16.3.1　类型　　428
16.3.2　定义项目属性　　433
16.3.3　Repeater和Loader　　436
16.3.4　转换　　437
16.4　用户输入和事件处理　　438
16.5　项目定位　　 444
16.6　State与Transition　　 446
16.7　动画　　 450
16.8　数据的显示　　 456
16.9　模块化编程　　 461
16.10　图形效果　　 466
16.11　有用的QML类型　　 489
16.12　Canvas　　 492
16.13　集成QML和C++　　 495
16.14　多媒体　　 500
第17章　Qt应用程序的发布　　 504
17.1　多种平台下Qt应用程序的发布　　 504
17.1.1　Unix和Linux　　 504
17.1.2　Windows　　 505
17.1.3　Mac OS X　　 506
17.1.4　Android平台Qt应用程序的发布　　 507
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt 5开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt程序设计
第一章 X Window编程入门
1 X11编程
……
第二章 Qt基础
1 Qt简介
……
第三章 Qt开发环境
1 Qt开发环境的建立
……
第四章 Qt编程方法
1 Qt应用程序的基本结构
……
第五章 Qt关键技术
第六章 Qt类
第七章 编程实例
第八章 KDE程序设计介绍
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>KDE2/Qt编程宝典(附光盘) (平装)
前言	1
第1部分
开始学习	5
第1章
什么是KDE	6
1.1
KDE 应用程序的结构	6
1.2
软件层次	7
1.3
关于 Qt	8

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>KDE2/Qt编程宝典(附光盘) (平装)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt平台体系与应用
第1章 引 言…………………………………………………………………………………… 1
1.1 Qt框架的特色…………………………………………………………………………… 1
1.1.1 跨平台……………………………………………………………………………… 1
1.1.2 艺术级图形界面设计……………………………………………………………… 3
1.1.3 抽象化核心模块设计……………………………………………………………… 3
1.1.4 环境准备…………………………………………………………………………… 3
1.2 本书的特色……………………………………………………………………………… 5
1.2.1 完整准确的参考…………………………………………………………………… 6
1.2.2 系统深入的说明…………………………………………………………………… 6
1.2.3 实例演示:远程传输与控制系统…………………………………………………… 7
1.3 远程传输与控制系统的结构…………………………………………………………… 7
1.3.1 总体结构…………………………………………………………………………… 7
1.3.2 软件层……………………………………………………………………………… 7
1.3.3 硬件层……………………………………………………………………………… 9
1.3.4 网络层……………………………………………………………………………… 9
1.3.5 跨语言通信层……………………………………………………………………… 9
1.3.6 数据层……………………………………………………………………………… 10
1.3.7 远端控制层………………………………………………………………………… 10
1.3.8 打包与发布………………………………………………………………………… 10
第2章 软件层系统功能模块…………………………………………………………… 11
2.1 Qt项目………………………………………………………………………………… 11
2.1.1 Qt工程…………………………………………………………………………… 11
2.1.2 PRO文件………………………………………………………………………… 12
2.1.3 影子编译…………………………………………………………………………… 14
2.1.4 版本控制…………………………………………………………………………… 14
2.2 系统程序窗口…………………………………………………………………………… 14
2.2.1 对话框开发………………………………………………………………………… 14
2.2.2 资源管理…………………………………………………………………………… 16
2.2.2.1 图片与图标资源……………………………………………………………… 16
2.2.2.2 css样式表…………………………………………………………………… 17
2.3 登录系统………………………………………………………………………………… 18
2.3.1 按钮响应…………………………………………………………………………… 18
2.3.2 读/写组件值……………………………………………………………………… 19
2.4 托盘管理………………………………………………………………………… 19
2.4.1 Windows系统托盘……………………………………………………………… 19
2.4.2 事件劫持…………………………………………………………………………… 20
2.4.3 菜单管理…………………………………………………………………………… 21
2.4.3.1 鼠标右键动作………………………………………………………………… 21
2.4.3.2 鼠标左键动作………………………………………………………………… 23
2.5 单实例管理……………………………………………………………………………… 24
2.5.1 进程与实例………………………………………………………………………… 24
2.5.2 单实例管理概述…………………………………………………………………… 25
2.6 再论对话框……………………………………………………………………………… 26
2.6.1 系统对话框………………………………………………………………………… 26
2.6.2 自定义对话框……………………………………………………………………… 27
第3章 Web网络服务模块…………………………………………………………………… 29
3.1 Qt网络模块…………………………………………………………………………… 29
3.1.1 网络模块类………………………………………………………………………… 29
3.1.2 QNetworkAccessManager类与QNetworkReply类…………………………… 29
3.2 下载升级文件…………………………………………………………………………… 30
3.2.1 信号与槽函数……………………………………………………………………… 30
3.2.2 功能模块与类……………………………………………………………………… 31
3.3 程序自动升级…………………………………………………………………………… 33
3.3.1 强制升级机制……………………………………………………………………… 33
3.3.2 系统实现…………………………………………………………………………… 34
3.3.2.1 读取INI文件中的版本信息…………………………………………………… 34
3.3.2.2 设计本地信息INI文件………………………………………………………… 34
3.3.2.3 读写MyDocuments目录下的INI文件………………………………………… 35
3.3.2.4 逻辑判断……………………………………………………………………… 36
3.3.2.5 开始下载……………………………………………………………………… 37
3.3.2.6 启动进程外EXE文件完成升级………………………………………………… 39
第4章 通用跨语言层远程网络通信………………………………………………………… 40
4.1 远程调用与通信………………………………………………………………………… 40
4.1.1 进程间通信………………………………………………………………………… 40
4.1.2 网络间通信………………………………………………………………………… 41
4.1.2.1 通信协议……………………………………………………………………… 41
4.1.2.2 通信程序与语言……………………………………………………………… 42
4.1.3 跨语言通信………………………………………………………………………… 48
4.1.3.1 可执行程序层跨语言通信……………………………………………………… 48
4.1.3.2 链接库层跨语言通信………………………………………………………… 49
4.1.3.3 代码层跨语言通信…………………………………………………………… 53
4.2 代码层跨语言通信协议………………………………………………………………… 53
4.2.1 JavaRMI ………………………………………………………………………… 53
2 Qt平台体系与应用———Qt5.5+核心方法、技巧与案例
4.2.2 WebService ……………………………………………………………………… 54
4.2.2.1 WebService功能实现………………………………………………………… 54
4.2.2.2 WebService功能描述………………………………………………………… 55
4.2.2.3 WebService远程调用………………………………………………………… 55
4.2.3 Hessian协议……………………………………………………………………… 58
4.2.3.1 Hessian协议介绍……………………………………………………………… 58
4.2.3.2 代码实现……………………………………………………………………… 59
4.3 Qt中的Hessian协议………………………………………………………………… 60
4.3.1 Hessian的C语言实现…………………………………………………………… 60
4.3.1.1 官方实现……………………………………………………………………… 60
4.3.1.2 第三方实现…………………………………………………………………… 61
4.3.1.3 Qt实现……………………………………………………………………… 62
4.3.2 qhessian的远程过程调用………………………………………………………… 63
4.3.2.1 qhessian包的结构…………………………………………………………… 63
4.3.2.2 通信原理与代码实现………………………………………………………… 66
4.4 远程传输与控制系统实例解析…………………………………………………… 69
4.4.1 总体需求分析……………………………………………………………………… 69
4.4.2 服务器端业务需求与功能模块…………………………………………………… 70
4.4.2.1 功能模块与接口……………………………………………………………… 70
4.4.2.2 数据层支持…………………………………………………………………… 71
4.4.3 客户端业务需求与功能模块……………………………………………………… 71
4.4.3.1 客户端引入qhessian模块……………………………………………………… 71
4.4.3.2 客户端实现…………………………………………………………………… 73
4.4.3.3 主程序接口调用……………………………………………………………… 75
4.4.4 编译与调试………………………………………………………………………… 76
4.4.4.1 配置文件……………………………………………………………………… 76
4.4.4.2 服务器与客户端……………………………………………………………… 76
第5章 硬件模块与底层驱动………………………………………………………………… 78
5.1 Qt引入硬件层………………………………………………………………………… 78
5.1.1 动态链接库………………………………………………………………………… 79
5.1.2 Qt程序静态加载动态链接库…………………………………………………… 79
5.1.2.1 Linux平台…………………………………………………………………… 80
5.1.2.2 Windows平台………………………………………………………………… 80
5.1.2.3 代码实现……………………………………………………………………… 81
5.1.3 Qt程序动态加载动态链接库…………………………………………………… 85
5.1.4 Qt程序加载非完整动态链接库………………………………………………… 86
5.2 二代身份证读卡器……………………………………………………………………… 90
5.2.1 功能描述…………………………………………………………………………… 90
5.2.1.1 二代身份证…………………………………………………………………… 90
5.2.1.2 二代身份证读卡器…………………………………………………………… 91
5.2.2 驱动接口…………………………………………………………………………… 92
5.2.2.1 公安部标准接口……………………………………………………………… 92
5.2.2.2 C语言实现…………………………………………………………………… 93
5.2.3 Qt调用…………………………………………………………………………… 96
5.2.3.1 读取身份证信息……………………………………………………………… 96
5.2.3.2 身份证信息的原始格式……………………………………………………… 101
5.2.3.3 身份证照片与指纹信息……………………………………………………… 104
5.2.3.4 Hessian上传身份证信息……………………………………………………… 105
5.2.4 兼容性…………………………………………………………………………… 113
5.3 SIM 卡读/写卡器…………………………………………………………………… 114
5.3.1 SIM 卡…………………………………………………………………………… 114
5.3.2 SIM 卡开发……………………………………………………………………… 115
5.3.2.1 ISO7816 …………………………………………………………………… 116
5.3.2.2 GSM11.11 ………………………………………………………………… 117
5.3.2.3 GSM11.14 ………………………………………………………………… 117
5.3.2.4 APDU 指令集……………………………………………………………… 118
5.3.2.5 Winscard封装……………………………………………………………… 122
5.3.3 实际系统开发…………………………………………………………………… 124
5.3.3.1 联通SIM 卡………………………………………………………………… 124
5.3.3.2 移动SIM 卡………………………………………………………………… 126
5.3.4 Qt实现SIM 卡的读/写操作…………………………………………………… 128
5.3.4.1 功能需求与程序架构………………………………………………………… 128
5.3.4.2 读/写SIM 卡………………………………………………………………… 128
5.4 其他硬件设备………………………………………………………………………… 136
5.4.1 指纹识别设备…………………………………………………………………… 136
5.4.2 短信业务模块设备……………………………………………………………… 136
第6章 Qt关键模块与高级功能…………………………………………………………… 137
6.1 Qt最优语言特色:再论信号与槽…………………………………………………… 137
6.1.1 信号与槽原理…………………………………………………………………… 137
6.1.1.1 Windows传统消息机制……………………………………………………… 137
6.1.1.2 Qt机制……………………………………………………………………… 139
6.1.2 示例程序………………………………………………………………………… 140
6.1.2.1 定义信号与槽……………………………………………………………… 140
6.1.2.2 创建信号与槽函数…………………………………………………………… 141
6.1.2.3 连接并使用信号与槽………………………………………………………… 142
6.2 Qt事件处理…………………………………………………………………………… 143
6.2.1 事件处理机制…………………………………………………………………… 143
6.2.2 高级事件响应…………………………………………………………………… 146
4 Qt平台体系与应用———Qt5.5+核心方法、技巧与案例
6.2.2.1 自主推动事件循环…………………………………………………………… 146
6.2.2.2 与Windows程序消息通信…………………………………………………… 146
6.3 系统关键功能………………………………………………………………………… 148
6.3.1 查看网络是否连接……………………………………………………………… 148
6.3.2 识别操作系统位数……………………………………………………………… 150
6.3.3 查看系统目录…………………………………………………………………… 150
6.3.3.1 获取Windows系统目录……………………………………………………… 150
6.3.3.2 获取应用程序所在目录……………………………………………………… 151
6.3.4 防止程序自动退出……………………………………………………………… 152
6.3.5 执行外部进程…………………………………………………………………… 152
6.3.5.1 启动第三方进程……………………………………………………………… 152
6.3.5.2 停止第三方进程……………………………………………………………… 153
6.3.5.3 后台方式启动第三方进程…………………………………………………… 154
6.3.5.4 指定输出方式启动第三方进程……………………………………………… 154
6.3.5.5 启动第三方BAT程序……………………………………………………… 154
6.4 服务模块……………………………………………………………………………… 155
6.4.1 INI文件操作…………………………………………………………………… 155
6.4.2 JSON 文件操作………………………………………………………………… 156
6.4.2.1 简单格式的JSON串………………………………………………………… 156
6.4.2.2 复杂格式的JSON串………………………………………………………… 157
6.4.3 XML文件操作………………………………………………………………… 158
6.4.4 二进制数据处理………………………………………………………………… 160
6.4.4.1 base64码…………………………………………………………………… 160
6.4.4.2 文本化处理………………………………………………………………… 160
6.4.5 Qt日志…………………………………………………………………………… 161
第7章 程序打包与发布…………………………………………………………… 163
7.1 发布Qt程序………………………………………………………………………… 163
7.1.1 Release与Debug编译………………………………………………………… 163
7.1.2 动态链接库依赖………………………………………………………………… 163
7.2 打包程序……………………………………………………………………………… 165
7.2.1 InstallShield打包……………………………………………………………… 166
7.2.1.1 创建基本的安装包…………………………………………………………… 166
7.2.1.2 卸载功能…………………………………………………………………… 166
7.2.1.3 安装第三方包与安装后重启………………………………………………… 166
7.2.2 inno打包………………………………………………………………………… 168
7.2.2.1 基本功能…………………………………………………………………… 168
7.2.2.2 高级功能…………………………………………………………………… 170
参考文献………………………………………………………………………… 176
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt平台体系与应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>嵌入式Qt实战教程
第1章 嵌入式GUI简介与Qt概述     1
1.1 常用GUI介绍    1
1.1.1 MiniGUI     2
1.1.2 MicroWindows     2
1.1.3 DinX     2
1.1.4 OpenGUI     3
1.1.5 Qt/Embedded     3
1.2 Qt简史    4
1.3 Qt程序设计简介    6
1.4 Qt版本介绍    6
1.5 怎样学习Qt    7
1.5.1 从C+ +到Qt的跨越     7
1.5.2 C语言和其他程序设计的关系     7
1.6 Qt开发工具的优点    8
1.7 Qt/Embedded介绍    9
1.7.1 架构     9
1.7.2 Qt的开发环境     11
1.7.3 Qt的支撑工具     11
1.8 Qt的安装    11
1.8.1 Linux下Qt的安装     12
1.8.2 Windows下Qt的安装配置     23
第2章 Qt编程基础     26
2.1 程序设计语言介绍    26
2.2 C+ +语法基础知识    28
2.3 C+ +高级应用———虚函数    34
第3章 Qt模块与Qt功能类     37
3.1 Qt常用模块    37
3.2 Qt部件与组类说明    37
3.3 Qt基于图形模式部件类    38
3.3.1 窗口与窗口相关部件     39
3.3.2 布局管理     40
第4章 Qt入门     42
4.1 Hello Qt    42
4.2 建立连接    43
4.3 窗口的布局    44
4.4 编译    46
4.5 Qt Creator编写多窗口程序    53
第5章 对话框     60
5.1 深入信号和槽    60
5.2 派生对话框类    64
5.3 Qt中常见的对话框及应用举例    68
5.4 Qt Creator登录对话框应用举例    71
5.5 快速设计对话框    76
5.6 能够改变的对话框    80
第6章 创建主窗口     83
6.1 继承QMainWindow类    83
6.2 创建菜单和工具条    86
6.3 创建状态条    90
6.4 实现文件菜单    92
6.5 使用对话框    98
6.6 存储设置    103
6.7 多文档    104
6.8 一个创建主窗口及各种控件的示例    107
第7章 鼠标和键盘事件     112
第8章 Qt线程及网络编程     118
8.1 早期的IPC方法———信号与管道    118
8.1.1 信号机制     118
8.1.2 管道     119
8.2 基于平台的线程QThread    120
8.2.1 线程的创建     120
8.2.2 线程同步     126
8.2.3 线程互斥锁     128
8.3 Qt中的网络编程    131
第9章 XML和数据库     136
9.1 XML    136
9.1.1 DOM     136
9.1.2 SAX     146
9.1.3 XML流     150
9.2 数据库    153
9.2.1 连接到数据库     154
9.2.2 执行SQL语句     159
9.2.3 使用SQL模型类     163
第10章 Qt应用举例     172
10.1 Qt图片浏览器    172
10.2 MP3音乐播放器    180
10.3 视频监控    190
10.3.1 什么是V4L2     190
10.3.2 常用的结构体     190
10.3.3 视频采集的基本流程     192
10.4 Qt门禁机项目    210
10.4.1 可视门禁项目的说明     210
10.4.2 项目代码     210
参考文献     221
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>嵌入式Qt实战教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++ GUI Qt 4编程(第二版)
第一部分 Qt基础
第1章 Qt入门
1.1 Hello Qt
1.2 建立连接
1.3 窗口部件的布局
1.4 使用参考文档
第2章 创建对话框
2.1 子类化QDialog
2.2 深入介绍信号和槽
2.3 快速设计对话框
2.4 改变形状的对话框
2.5 动态对话框
2.6 内置的窗口部件类和对话框类
第3章 创建主窗口
3.1 子类化QMainWindow
3.2 创建菜单和工具栏
3.3 设置状态栏
3.4 实现File菜单
3.5 使用对话框
3.6 存储设置
3.7 多文档
3.8 程序启动画面
第4章 实现应用程序的功能
4.1 中央窗口部件
4.2 子类化QTableWidget
4.3 载入和保存
4.4 实现Edit菜单
4.5 实现其他菜单
4.6 子类化QTableWidgetItem
第5章 创建自定义窗口部件
5.1 自定义Qt窗口部件
5.2 子类化QWidget
5.3 在Qt设计师中集成自定义窗口部件
5.4 双缓冲
第二部分 Qt中级
第6章 布局管理
6.1 在窗体中摆放窗口部件
6.2 分组布局
6.3 切分窗口
6.4 滚动区域
6.5 停靠窗口和工具栏
6.6 多文档界面
第7章 事件处理
7.1 重新实现事件处理器
7.2 安装事件过滤器
7.3 处理密集时的响应保持
第8章 二维图形
8.1 用QPainter绘图
8.2 坐标系统变换
8.3 用QImage高质量绘图
8.4 基于项的图形视图
8.5 打印
第9章 拖放
9.1 使拖放生效
9.2 支持自定义拖动类型
9.3 剪贴板处理技术
第10章 项视图类
10.1 使用项视图的简便类
10.2 使用预定义模型
10.3 实现自定义模型
10.4 实现自定义委托
第11章 容器类
11.1 连续容器
11.2 关联容器
11.3 通用算法
11.4 字符串、字节数组和变量
第12章 输入与输出
12.1 读取和写入二进制数据
12.2 读取和写入文本
12.3 遍历目录
12.4 嵌入资源
12.5 进程间通信
第13章 数据库
13.1 连接和查询
13.2 查看表
13.3 使用窗体编辑记录
13.4 在表中显示数据
第14章 多线程
14.1 创建线程
14.2 同步线程
14.3 与主线程通信
14.4 在次线程中使用Qt的类
第15章 网络
15.1 写FTP客户端
15.2 写H T T P客户端
15.3 写TCP客户/服务器应用程序
15.4 发送和接收UDP数据报
第16章 XML
16.1 使用QXmlStreamReader读取XML
16.2 用DOM读取XML
16.3 使用SAX读取XML
16.4 写入XML
第17章 提供在线帮助
17.1 工具提示、状态提示和“Whats This?”帮助
17.2 利用Web浏览器提供在线帮助
17.3 将QTextBrowser作为简单的帮助引擎
17.4 使用Qt Assistant提供强大的在线帮助
第三部分 Qt高级
第18章 国际化
18.1 使用Unicode
18.2 让应用程序感知翻译
18.3 动态切换语言
18.4 翻译应用程序
第19章 自定义外观
19.1 使用Qt样式表
19.2 子类化QStyle
第20章 三维图形
20.1 使用OpenGL绘图
20.2 OpenGL和QPainter的结合
20.3 使用帧缓存对象生成叠加
第21章 创建插件
21.1 利用插件扩展Qt
21.2 使应用程序感知插件
21.3 编写应用程序的插件
第22章 应用程序脚本
22.1 ECMAScript语言概述
22.2 使用脚本扩展Qt应用程序
22.3 使用脚本实现GUI扩展
22.4 使用脚本自动化处理任务
第23章 平台相关特性
23.1 连接本地的应用程序编程接口
23.2 在Windows上使用ActiveX
23.3 处理X11会话管理
第24章 嵌入式编程
24.1 从Qt/Embedded Linux开始
24.2 自定义Qt/Embedded Linux
24.3 Qt应用程序与Qtopia的集成
24.4 使用Qtopia的API
第四部分 附录
附录A Qt的获取和安装
A.1 协议说明
A.2 Qt/Windows的安装
A.3 Qt/Mac的安装
A.4 Qt/X11的安装
附录B 编译Qt应用程序
B.1 使用qmake
B.2 使用第三方编译工具
附录C Qt Jambi简介
C.1 Qt Jambi入门
C.2 在Eclipse IDE中使用Qt Jambi
C.3 在Qt Jambi中集成C++组件
附录D 面向Java和C#程序员的C++简介
D.1 C++入门
D.2 主要语言之间的差异
D.3 C++标准库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C++ GUI Qt 4编程(第二版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt Creator快速入门
第1篇 基本应用篇
第1章 QtCreator简介………………………………………………………………… 2
1.1 QtCreator的下载与安装……………………………………………………… 2
1.2 QtCreator环境介绍…………………………………………………………… 3
1.2.1 运行一个示例程序………………………………………………………… 6
1.2.2 帮助模式…………………………………………………………………… 8
1.3 Qt工具简介…………………………………………………………………… 10
1.3.1 QtAssistant(Qt助手)…………………………………………………… 10
1.3.2 QtDesigner(Qt设计师)………………………………………………… 11
1.3.3 QtLinguist(Qt语言家) ………………………………………………… 11
1.4 小 结…………………………………………………………………………… 12
第2章 HelloWorld …………………………………………………………………… 13
2.1 编写HelloWorld程序………………………………………………………… 13
2.1.1 新建QtWidgets应用…………………………………………………… 13
2.1.2 文件说明与界面设计……………………………………………………… 16
2.2 程序的运行与发布……………………………………………………………… 18
2.2.1 程序的运行………………………………………………………………… 18
2.2.2 程序的发布………………………………………………………………… 21
2.2.3 设置应用程序图标………………………………………………………… 23
2.3 helloworld程序源码与编译过程详解………………………………………… 24
2.3.1 纯代码编写程序与命令行编译…………………………………………… 25
2.3.2 使用.ui文件……………………………………………………………… 31
2.3.3 自定义C++类…………………………………………………………… 35
2.3.4 使用Qt设计师界面类…………………………………………………… 38
2.4 项目模式和项目文件介绍……………………………………………………… 39
2.4.1 项目模式…………………………………………………………………… 39
2.4.2 项目文件…………………………………………………………………… 40
2.4.3 关于本书源码的使用……………………………………………………… 41
2.5 小 结…………………………………………………………………………… 41
第3章 窗口部件……………………………………………………………………… 42
3.1 基础窗口部件QWidget ……………………………………………………… 42
3.1.1 窗口、子部件以及窗口类型……………………………………………… 43
3.1.2 窗口几何布局……………………………………………………………… 46
3.1.3 程序调试…………………………………………………………………… 46
3.2 对话框QDialog………………………………………………………………… 50
3.2.1 模态和非模态对话框……………………………………………………… 50
3.2.2 多窗口切换………………………………………………………………… 51
3.2.3 标准对话框………………………………………………………………… 56
3.3 其他窗口部件…………………………………………………………………… 63
3.3.1 QFrame类族……………………………………………………………… 63
3.3.2 按钮部件…………………………………………………………………… 67
3.3.3 QLineEdit ………………………………………………………………… 68
3.3.4 QAbstractSpinBox ……………………………………………………… 71
3.3.5 QAbstractSlider ………………………………………………………… 72
3.4 小 结…………………………………………………………………………… 72
第4章 布局管理……………………………………………………………………… 73
4.1 布局管理系统…………………………………………………………………… 73
4.1.1 布局管理器………………………………………………………………… 74
4.1.2 设置部件大小……………………………………………………………… 77
4.1.3 可扩展窗口………………………………………………………………… 80
4.1.4 分裂器(QSplitter)………………………………………………………… 81
4.2 设置伙伴(buddy)……………………………………………………………… 82
4.3 设置Tab键顺序……………………………………………………………… 83
4.4 QtCreator中的定位器………………………………………………………… 83
4.5 小 结…………………………………………………………………………… 84
第5章 应用程序主窗口……………………………………………………………… 85
5.1 主窗口框架……………………………………………………………………… 85
5.1.1 Qt资源系统、菜单栏和工具栏…………………………………………… 86
5.1.2 中心部件…………………………………………………………………… 91
5.1.3 Dock部件………………………………………………………………… 92
5.1.4 状态栏……………………………………………………………………… 93
5.1.5 自定义菜单………………………………………………………………… 93
5.2 富文本处理……………………………………………………………………… 96
5.2.1 富文本文档结构…………………………………………………………… 96
5.2.2 文本块……………………………………………………………………… 98
5.2.3 表格、列表与图片………………………………………………………… 101
5.2.4 查找功能………………………………………………………………… 102
5.2.5 语法高亮与HTML …………………………………………………… 104
5.3 拖放操作……………………………………………………………………… 106
5.3.1 使用拖放打开文件……………………………………………………… 106
5.3.2 自定义拖放操作………………………………………………………… 107
5.4 打印文档……………………………………………………………………… 111
5.5 小 结………………………………………………………………………… 114
第6章 事件系统……………………………………………………………………… 115
6.1 Qt中的事件…………………………………………………………………… 115
6.1.1 事件的处理……………………………………………………………… 116
6.1.2 事件的传递……………………………………………………………… 116
6.2 鼠标事件和滚轮事件………………………………………………………… 120
6.3 键盘事件……………………………………………………………………… 122
6.4 定时器事件与随机数………………………………………………………… 126
6.5 事件过滤器与事件的发送…………………………………………………… 128
6.6 小 结………………………………………………………………………… 130
第7章 Qt对象模型与容器类……………………………………………………… 131
7.1 对象模型……………………………………………………………………… 131
7.1.1 信号和槽………………………………………………………………… 132
7.1.2 属性系统………………………………………………………………… 139
7.1.3 对象树与拥有权………………………………………………………… 142
7.1.4 元对象系统……………………………………………………………… 144
7.2 容器类………………………………………………………………………… 145
7.2.1 Qt的容器类介绍………………………………………………………… 146
7.2.2 遍历容器………………………………………………………………… 150
7.2.3 通用算法………………………………………………………………… 156
7.2.4 QString ………………………………………………………………… 158
7.2.5 QByteArray和QVariant ……………………………………………… 163
7.3 正则表达式…………………………………………………………………… 165
7.3.1 正则表达式介绍………………………………………………………… 165
7.3.2 正则表达式组成元素…………………………………………………… 167
7.3.3 文本捕获………………………………………………………………… 170
7.3.4 新的QRegularExpression类…………………………………………… 171
7.4 小 结………………………………………………………………………… 173
第8章 界面外观……………………………………………………………………… 174
8.1 Qt风格………………………………………………………………………… 174
8.2 Qt样式表……………………………………………………………………… 177
8.2.1 Qt样式表介绍…………………………………………………………… 177
8.2.2 Qt样式表语法…………………………………………………………… 178
8.2.3 自定义部件外观与换肤………………………………………………… 181
8.3 特殊效果窗体………………………………………………………………… 185
8.3.1 不规则窗体……………………………………………………………… 185
8.3.2 透明窗体………………………………………………………………… 186
8.3.3 实现Windows7毛玻璃效果…………………………………………… 189
8.4 小 结………………………………………………………………………… 190
第9章 国际化、帮助系统和Qt插件……………………………………………… 191
9.1 国际化………………………………………………………………………… 191
9.1.1 使用QtLinguist翻译应用程序……………………………………… 191
9.1.2 程序翻译中的相关问题………………………………………………… 196
9.2 帮助系统……………………………………………………………………… 199
9.2.1 简单的帮助提示………………………………………………………… 199
9.2.2 定制QtAssistant ……………………………………………………… 199
9.3 创建Qt插件………………………………………………………………… 207
9.3.1 在设计模式提升窗口部件……………………………………………… 207
9.3.2 创建应用程序插件……………………………………………………… 208
9.3.3 创建QtDesigner自定义部件………………………………………… 212
9.4 小 结………………………………………………………………………… 214
第2篇 图形动画篇
第10章 2D 绘图……………………………………………………………………… 216
10.1 基本绘制和填充……………………………………………………………… 216
10.1.1 基本图形的绘制和填充………………………………………………… 217
10.1.2 渐变填充………………………………………………………………… 222
10.2 坐标系统……………………………………………………………………… 225
10.2.1 抗锯齿渲染……………………………………………………………… 226
10.2.2 坐标变换………………………………………………………………… 228
10.3 其他绘制……………………………………………………………………… 235
10.3.1 绘制文字………………………………………………………………… 235
10.3.2 绘制路径………………………………………………………………… 236
10.3.3 绘制图像………………………………………………………………… 239
10.3.4 复合模式………………………………………………………………… 244
10.4 双缓冲绘图…………………………………………………………………… 246
10.5 绘图中的其他问题…………………………………………………………… 248
10.6 小 结………………………………………………………………………… 250
第11章 图形视图、动画和状态机框架……………………………………………… 251
11.1 图形视图框架的结构………………………………………………………… 251
11.1.1 场 景…………………………………………………………………… 252
11.1.2 视 图…………………………………………………………………… 253
11.1.3 图形项…………………………………………………………………… 255
11.2 图形视图框架的坐标系统和事件处理……………………………………… 257
11.2.1 坐标系统………………………………………………………………… 257
11.2.2 事件处理与传播………………………………………………………… 262
11.3 图形视图框架的其他特性…………………………………………………… 267
11.3.1 图形效果………………………………………………………………… 267
11.3.2 动画、碰撞检测和图形项组…………………………………………… 268
11.3.3 打印和使用OpenGL进行渲染……………………………………… 271
11.3.4 窗口部件、布局和内嵌部件…………………………………………… 272
11.4 动画框架……………………………………………………………………… 274
11.4.1 实现属性动画…………………………………………………………… 275
11.4.2 使用缓和曲线…………………………………………………………… 276
11.4.3 动画组…………………………………………………………………… 276
11.4.4 在图形视图框架中使用动画…………………………………………… 278
11.5 状态机框架…………………………………………………………………… 280
11.5.1 创建状态机……………………………………………………………… 280
11.5.2 在状态机中使用动画…………………………………………………… 281
11.5.3 状态机框架的其他特性………………………………………………… 283
11.6 小 结………………………………………………………………………… 290
第12章 3D 绘图……………………………………………………………………… 291
12.1 使用OpenGL绘制图形介绍……………………………………………… 291
12.2 绘制多边形…………………………………………………………………… 295
12.2.1 使用顶点数组…………………………………………………………… 295
12.2.2 使用缓存………………………………………………………………… 297
12.3 绘制彩色3D图形…………………………………………………………… 297
12.3.1 为图形设置顶点颜色…………………………………………………… 298
12.3.2 实现3D效果…………………………………………………………… 299
12.4 使用纹理贴图………………………………………………………………… 300
12.5 小 结………………………………………………………………………… 303
第3篇 影音媒体篇
第13章 音视频播放………………………………………………………………… 305
第14章 相机和音频录制…………………………………………………………… 322
第4篇 数据处理篇
第15章 文件、目录和输入/输出…………………………………………………… 336
第16章 模型/视图编程……………………………………………………………… 349
第17章 数据库和XML …………………………………………………………… 380
第5篇 网络通信篇
第18章 网络编程…………………………………………………………………… 413
第19章 进程和线程………………………………………………………………… 446
第20章 QtWebEngine ……………………………………………………………… 465
附录A Qt5简介…………………………………………………………………… 477
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt Creator快速入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt 5.9 C++开发指南
第　1章 认识Qt　1
1．1　Qt简介　1
1．2　Qt的获取与安装　1
1．2．1　Qt的许可类型　1
1．2．2　Qt的版本　2
1．2．3　Qt的下载与安装　2
1．3　Qt Creator初步使用　5
1．3．1　Qt Creator的界面组成　5
1．3．2　Qt Creator的设置　6
1．4　编写一个Hello World程序　7
1．4．1　新建一个项目　7
1．4．2　项目的文件组成和管理　10
1．4．3　项目的编译、调试与运行　11
1．5　在Visual Studio里使用Qt　13
第　2章 GUI应用程序设计基础　16
2．1　UI文件设计与运行机制　16
2．1．1　项目文件组成　16
2．1．2　项目管理文件　16
2．1．3　界面文件　17
2．1．4　主函数文件　19
2．1．5　窗体相关的文件　20
2．2　可视化UI设计　25
2．2．1　实例程序功能　26
2．2．2　界面组件布局　26
2．2．3　信号与槽　29
2．2．4　可视化生成槽函数原型和
框架　30
2．3　代码化UI设计　34
2．3．1　实例功能　34
2．3．2　界面创建　34
2．3．3　信号与槽的关联　37
2．4　混合方式UI设计　37
2．4．1　设计目的　37
2．4．2　创建项目并添加资源文件　38
2．4．3　设计Action　39
2．4．4　设计菜单和工具栏　41
2．4．5　代码创建其他界面组件　44
2．4．6　Action的功能实现　45
2．4．7　手工创建的组件的
信号与槽　47
2．4．8　为应用程序设置图标　48
2．5　Qt Creator使用技巧　48
第3章　Qt类库概述　50
3．1　Qt核心特点　50
3．1．1　概述　50
3．1．2　元对象系统　50
3．1．3　属性系统　52
3．1．4　信号与槽　53
3．1．5　元对象特性测试实例　55
3．2　Qt全局定义　59
3．2．1　数据类型定义　60
3．2．2　函数　60
3．2．3　宏定义　61
3．3　容器类　62
3．3．1　容器类概述　62
3．3．2　顺序容器类　63
3．3．3　关联容器类　64
3．4　容器类的迭代　66
3．4．1　Java类型迭代器　66
3．4．2　STL类型迭代器　68
3．4．3　foreach关键字　69
3．5　Qt类库的模块　70
3．5．1　Qt基本模块　71
3．5．2　Qt附加模块　71
3．5．3　增值模块　72
3．5．4　技术预览模块　72
3．5．5　Qt工具　73
第4章　常用界面设计组件　74
4．1　字符串与输入输出　74
4．1．1　字符串与数值之间的转换　74
4．1．2　QString的常用功能　76
4．2　SpinBox的使用　78
4．3　其他数值输入和显示组件　80
4．3．1　实例功能　80
4．3．2　各组件的主要功能和属性　80
4．3．3　实例功能的代码实现　82
4．4　时间日期与定时器　84
4．4．1　时间日期相关的类　84
4．4．2　日期时间数据与字符串之间的
转换　84
4．4．3　QCalendarWidget日历组件　87
4．4．4　定时器的使用　87
4．5　QComboBox和QPlainTextEdit　89
4．5．1　实例功能概述　89
4．5．2　QComboBox的使用　89
4．5．3　QPlainTextEdit的使用　91
4．6　QListWidget和QToolButton　93
4．6．1　实例功能简介　93
4．6．2　界面设计　94
4．6．3　QListWidget的操作　97
4．6．4　QToolButton与下拉式
菜单　99
4．6．5　创建右键快捷菜单　101
4．7　QTreeWidget和QDockWidget　102
4．7．1　实例功能概述　102
4．7．2　界面设计　103
4．7．3　QTreeWidget操作　105
4．7．4　QLabel和Qpixmap
显示图片　110
4．7．5　QDockWidget的操作　111
4．8　QTableWidget的使用　112
4．8．1　QTableWidget概述　112
4．8．2　界面设计与初始化　113
4．8．3　QTableWidget操作　114
第5章　Model/View结构　120
5．1　Model/View结构　120
5．1．1　Model/View基本原理　120
5．1．2　数据模型　121
5．1．3　视图组件　122
5．1．4　代理　122
5．1．5　Model/View结构的一些
概念　123
5．2　QFileSystemModel　125
5．2．1　QFileSystemModel类的
基本功能　125
5．2．2　QFileSystemModel的
使用　125
5．3　QStringListModel　127
5．3．1　QstringListModel
功能概述　127
5．3．2　QStringListModel的使用　127
5．4　QStandardItemModel　130
5．4．1　功能概述　130
5．4．2　界面设计与主窗口类
定义　131
5．4．3　QStandardItemModel的
使用　132
5．5　自定义代理　139
5．5．1　自定义代理的功能　139
5．5．2　自定义代理类的基本
设计要求　139
5．5．3　基于QSpinBox的自定义
代理类　139
5．5．4　自定义代理类的使用　141
第6章　对话框与多窗体设计　143
6．1　标准对话框　143
6．1．1　概述　143
6．1．2　QFileDialog对话框　144
6．1．3　QColorDialog对话框　146
6．1．4　QFontDialog对话框　146
6．1．5　QInputDialog标准输入
对话框　147
6．1．6　QMessageBox消息对话框　149
6．2　自定义对话框及其调用　150
6．2．1　对话框的不同调用方式　150
6．2．2　对话框QWDialogSize的
创建和使用　152
6．2．3　对话框QWDialogHeaders的
创建和使用　154
6．2．4　对话框QWDialogLocate的
创建与使用　156
6．2．5　利用信号与槽实现交互
操作　160
6．3　多窗体应用程序设计　162
6．3．1　主要的窗体类及其用途　162
6．3．2　窗体类重要特性的设置　163
6．3．3　多窗口应用程序的设计　165
6．4　MDI应用程序设计　170
6．4．1　MDI简介　170
6．4．2　文档窗口类QFormDoc的
设计　171
6．4．3　MDI主窗口设计与子窗口的
使用　173
6．5　Splash与登录窗口　176
6．5．1　实例功能概述　176
6．5．2　对话框界面设计和类
定义　177
6．5．3　QDlgLogin类功能实现　178
6．5．4　Splash登录窗口的使用　181
第7章　文件系统和文件读写　182
7．1　文本文件读写　182
7．1．1　实例功能概述　182
7．1．2　QFile读写文本文件　182
7．1．3　QFile和QTextStream结合
读写文本文件　184
7．1．4　解决中文乱码的问题　185
7．2　二进制文件读写　186
7．2．1　实例功能概述　186
7．2．2　Qt预定义编码文件的读写　187
7．2．3　标准编码文件的读写　192
7．3　文件目录操作　197
7．3．1　文件目录操作相关的类　197
7．3．2　实例概述　197
7．3．3　QCoreApplication类　199
7．3．4　QFile类　199
7．3．5　QFileInfo类　200
7．3．6　QDir类　201
7．3．7　QTemporaryDir和
QTemporaryFile　203
7．3．8　QFileSystemWatcher类　203
第8章　绘图　206
8．1　QPainter基本绘图　206
8．1．1　QPainter绘图系统　206
8．1．2　QPen的主要功能　209
8．1．3　QBrush的主要功能　210
8．1．4　渐变填充　212
8．1．5　QPainter绘制基本图形
元件　214
8．2　坐标系统和坐标变换　217
8．2．1　坐标变换函数　217
8．2．2　坐标变换绘图实例　218
8．2．3　视口和窗口　221
8．2．4　绘图叠加的效果　223
8．3　Graphics View绘图架构　224
8．3．1　场景、视图与图形项　224
8．3．2　Graphics View的坐标
系统　226
8．3．3　Graphics View相关的类　227
8．3．4　Graphics View程序基本结构
和功能实现　229
8．3．5　Graphics View绘图程序
实例　235
第9章　Qt Charts　247
9．1　Qt Charts概述　247
9．1．1　Qt Charts模块　247
9．1．2　一个简单的QChart绘图
程序　248
9．1．3　图表的主要组成部分　249
9．2　QChart绘制折线图　253
9．2．1　实例功能　253
9．2．2　主窗口类定义和初始化　253
9．2．3　画笔设置对话框
QWDialogPen　256
9．2．4　QChart的设置　257
9．2．5　QLineSeries序列的设置　259
9．2．6　QValueAxis坐标轴的
设置　261
9．3　各种常见图表的绘制　263
9．3．1　实例功能概述　263
9．3．2　数据准备　264
9．3．3　柱状图　267
9．3．4　饼图　270
9．3．5　堆叠柱状图　273
9．3．6　百分比柱状图　274
9．3．7　散点图和光滑曲线图　276
9．4　图表的其他操作　277
9．4．1　实例功能概述　277
9．4．2　自定义QWChartView类　278
9．4．3　主窗口类的设计　280
9．4．4　实时显示光标处的数值　281
9．4．5　QLegendMarker的使用　282
9．4．6　图表的缩放　283
第　10章 Data Visualization　284
10．1　Data Visualization模块概述　284
10．2　三维柱状图　285
10．2．1　实例功能　285
10．2．2　主窗口设计　286
10．2．3　三维柱状图的创建　287
10．2．4　三维柱状图属性设置　289
10．3　三维散点图　293
10．3．1　绘制三维散点图　293
10．3．2　三维坐标轴的方向　296
10．3．3　散点形状与大小　296
10．4　三维曲面绘图　296
10．4．1　三维曲面图　296
10．4．2　三维地形图　301
第　11章 数据库　305
11．1　Qt SQL模块概述　305
11．1．1　Qt SQL支持的数据库　305
11．1．2　SQLite数据库　306
11．1．3　Qt SQL模块的主要类　308
11．2　QSqlTableModel的使用　309
11．2．1　实例功能　309
11．2．2　主窗口设计　310
11．2．3　打开数据表　311
11．2．4　添加、插入与删除记录　319
11．2．5　保存与取消修改　319
11．2．6　设置和清除照片　320
11．2．7　数据记录的遍历　321
11．2．8　记录排序　322
11．2．9　记录过滤　322
11．3　QSqlQueryModel的使用　323
11．3．1　QSqlQueryModel功能
概述　323
11．3．2　使用QSqlQueryModel实现
数据查询　323
11．4　QSqlQuery的使用　327
11．4．1　QSqlQuery基本用法　327
11．4．2　QSqlQueryModel和
QSqlQuery联合使用　328
11．5　QSqlRelationalTableModel的
使用　336
11．5．1　关系型数据表和实例
功能　336
11．5．2　关系型数据模型功能
实现　338
第　12章 自定义插件和库　340
12．1　自定义Widget组件　340
12．1．1　自定义Widget子类
QmyBattery　340
12．1．2　自定义Widget组件的
使用　343
12．2　自定义Qt Designer插件　344
12．2．1　创建Qt Designer Widget插件项目　344
12．2．2　插件项目各文件的功能
实现　346
12．2．3　插件的编译与安装　349
12．2．4　使用自定义插件　350
12．2．5　使用MSVC编译器输出
中文的问题　352
12．3　创建和使用静态链接库　353
12．3．1　创建静态链接库　353
12．3．2　静态链接库的使用　354
12．4　创建和使用共享库　357
12．4．1　创建共享库　357
12．4．2　使用共享库　358
第　13章 多线程　362
13．1　QThread创建多线程程序　362
13．1．1　QThread类功能简介　362
13．1．2　掷骰子的线程
QDiceThread　363
13．1．3　掷骰子的多线程应用
程序　365
13．2　线程同步　367
13．2．1　线程同步的概念　367
13．2．2　基于互斥量的线程同步　368
13．2．3　基于QReadWriteLock的
线程同步　371
13．2．4　基于QWaitCondition的
线程同步　373
13．2．5　基于信号量的线程同步　377
第　14章 网络编程　383
14．1　主机信息查询　383
14．1．1　QHostInfo和
QNetworkInterface类　383
14．1．2　QHostInfo的使用　384
14．1．3　QNetworkInterface的
使用　386
14．2　TCP通信　388
14．2．1　TCP通信概述　388
14．2．2　TCP服务器端程序
设计　390
14．2．3　TCP客户端程序设计　395
14．3　QUdpSocket实现UDP通信　397
14．3．1　UDP通信概述　397
14．3．2　UDP单播和广播　398
14．3．3　UDP组播　402
14．4　基于HTTP协议的网络应用
程序　405
14．4．1　实现高层网络操作的类　405
14．4．2　基于HTTP协议的网络
文件下载　406
第　15章 多媒体　409
15．1　Qt多媒体模块功能概述　409
15．2　音频播放　410
15．2．1　使用QMediaPlayer播放
音乐文件　410
15．2．2　使用QSoundEffect和Qsound
播放音效文件　415
15．3　音频输入　415
15．3．1　使用QAudioRecorder
录制音频　415
15．3．2　使用QAudioInput获取
音频输入　421
15．4　视频播放　428
15．4．1　在QVideoWidget上播放
视频　428
15．4．2　在QGraphicsVideoItem上
播放视频　431
15．5　摄像头的使用　433
15．5．1　摄像头控制概述　433
15．5．2　实例主窗口设计与初始化　435
15．5．3　QCamera对象创建与控制　436
15．5．4　QCameraImageCapture抓取静态图片　438
15．5．5　QMediaRecorder视频录制　439
第　16章 应用程序设计辅助功能　441
16．1　多语言界面　441
16．1．1　多语言界面设计概述　441
16．1．2　tr()函数的使用　441
16．1．3　生成语言翻译文件　442
16．1．4　使用Qt Linguist翻译ts文件　443
16．1．5　调用翻译文件改变界面语言　444
16．2　使用样式表自定义界面　446
16．2．1　Qt样式表　446
16．2．2　Qt样式表句法　447
16．2．3　样式表的使用　453
16．3　使用QStyle设置界面外观　455
16．3．1　QStyle的作用　455
16．3．2　Qt内置样式的使用　456
16．4　Qt应用程序的发布　457
16．4．1　应用程序发布方式　457
16．4．2　Windows平台上的应用程序发布　458
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt 5.9 C++开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI与数据可视化编程
目　录
第　一部分 PyQt5开发基础
第　1章 开发环境安装　2
1．1　Python　2
1．1．1　Python 简介　2
1．1．2　Python的下载与安装　2
1．1．3　IDLE的基本使用　3
1．1．4　安装Python包　4
1．2　Qt　5
1．2．1　Qt 简介　5
1．2．2　Qt 的下载与安装　5
1．2．3　Qt的几个工具软件　7
1．2．4　Qt Creator的设置　7
1．3　PyQt5　8
1．3．1　PyQt5简介　8
1．3．2　PyQt5安装　9
1．3．3　在IDLE中开启对PyQt5的代码提示功能　10
第　2章 PyQt5 GUI程序框架　11
2．1　PyQt5 GUI程序的基本框架　11
2．2　使用可视化设计窗体的GUI程序　12
2．2．1　用UI Designer可视化设计窗体　13
2．2．2　将ui文件编译为py文件　16
2．2．3　使用Ui_FormHello类的GUI程序框架　18
2．2．4　界面与逻辑分离的GUI程序框架　19
2．3　信号与槽的使用　23
2．3．1　信号与槽功能概述　23
2．3．2　Qt Creator的使用　23
2．3．3　窗体可视化设计　25
2．3．4　界面组件布局管理　26
2．3．5　组件的信号与内建槽函数的关联　29
2．3．6　PyQt5 GUI项目程序框架　30
2．3．7　为组件的内建信号编写槽函数　35
2．4　自定义信号的使用　39
2．4．1　信号与槽的一些特点和功能　39
2．4．2　自定义信号使用示例　40
2．4．3　使用信号与槽的一些注意事项　43
2．5　资源文件的使用　43
2．5．1　功能概述　43
2．5．2　窗体可视化设计　44
2．5．3　创建和使用资源文件　44
2．5．4　窗体文件和资源文件的编译　45
2．5．5　窗体业务逻辑类的设计　46
2．5．6　为应用程序设置图标　47
2．6　从Qt C++类库到PyQt5　47
2．6．1　帮助信息的查找　47
2．6．2　正确导入模块中的类　49
2．6．3　部分类和接口函数的差异　50
2．6．4　数据类型对应关系　51
2．7　3个单窗体GUI项目模板　52
2．7．1　概述　52
2．7．2　dialogApp项目模板　53
2．7．3　widgetApp项目模板　54
2．7．4　mainWindowApp项目模板　55
2．7．5　使用项目模板和实例源程序　56
2．7．6　在Eric中编辑和运行示例程序　57
第二部分　GUI应用程序设计
第3章　常用界面组件的使用　60
3．1　数据输入输出　60
3．2　QPushButton　62
3．3　QSlider和QProgressBar　64
3．4　日期时间数据　66
3．4．1　日期时间类和界面组件　66
3．4．2　日期时间数据的获取并转换为字符串　67
3．4．3　字符串转换为日期时间　68
3．4．4　QLineEdit的inputMask　68
3．5　定时器QTimer　69
3．6　下拉列表框QComboBox　70
3．6．1　QComboBox功能概述　70
3．6．2　简单的ComboBox操作　71
3．6．3　带用户数据的ComboBox　72
3．6．4　QComboBox常用函数总结　73
3．7　QMainWindow与QAction　73
3．7．1　功能简介　73
3．7．2　窗体可视化设计　75
3．7．3　界面操作功能的代码实现　77
3．8　QListWidget和QToolButton　80
3．8．1　功能概述　80
3．8．2　窗体可视化设计　81
3．8．3　QToolButton与下拉式菜单　84
3．8．4　QListWidget的操作　85
3．8．5　创建右键快捷菜单　88
3．9　QTreeWidget和QDockWidget　88
3．9．1　功能概述　88
3．9．2　窗体可视化设计　90
3．9．3　QTreeWidget操作　91
3．9．4　QLabel和QPixmap显示图片　96
3．9．5　QDockWidget的操作　97
3．10　QTableWidget　98
3．10．1　QTableWidget概述　98
3．10．2　窗体设计与初始化　99
3．10．3　QTableWidget操作　100
3．11　容器类组件与布局设计　105
3．11．1　QGroupBox组件与水平布局　106
3．11．2　布局的layoutStretch属性　106
3．11．3　网格状布局　107
3．11．4　分割条　108
第4章　Model/View结构　109
4．1　Model/View结构　109
4．1．1　Model/View结构基本原理　109
4．1．2　Model（数据模型）　110
4．1．3　View（视图）　111
4．1．4　Delegate（代理）　111
4．1．5　Model/View结构的一些概念　112
4．2　QFileSystemModel　114
4．2．1　QFileSystemModel类的基本功能　114
4．2．2　QFileSystemModel的使用　114
4．3　QStringListModel　116
4．3．1　QStringListModel功能概述　116
4．3．2　QStringListModel的使用　116
4．4　QStandardItemModel　119
4．4．1　功能概述　119
4．4．2　界面设计　120
4．4．3　QStandardItemModel的使用　120
4．5　自定义代理　128
4．5．1　自定义代理的功能　128
4．5．2　自定义代理类的基本设计要求　128
4．5．3　基于QDoubleSpinBox的自定义代理类　129
4．5．4　基于QComboBox的自定义代理类　130
4．5．5　自定义代理类的使用　131
第5章　事件处理　133
5．1　默认事件处理　133
5．1．1　应用程序的事件循环　133
5．1．2　事件类型与默认的事件处理函数　133
5．1．3　事件与信号的关系　137
5．2　事件拦截与事件过滤　139
5．2．1　event()函数的作用　139
5．2．2　事件过滤器　140
5．2．3　事件队列的及时处理　141
5．3　拖放事件与拖放操作　142
5．3．1　拖放操作相关事件　142
5．3．2　外部文件拖放操作示例　143
5．4　具有拖放操作功能的组件　146
5．4．1　功能概述　146
5．4．2　界面设计与初始化　147
5．4．3　拖放操作属性的显示　148
5．4．4　拖放属性的设置　149
5．4．5　通过事件过滤器实现项的删除　150
第6章　对话框与多窗口设计　151
6．1　标准对话框　151
6．1．1　概述　151
6．1．2　QFileDialog对话框　152
6．1．3　QColorDialog对话框　154
6．1．4　QFontDialog对话框　154
6．1．5　QProgressDialog对话框　155
6．1．6　QInputDialog输入对话框　156
6．1．7　QMessageBox消息对话框　157
6．2　自定义对话框及其使用　159
6．2．1　对话框的不同调用方式　159
6．2．2　示例项目的文件组成　160
6．2．3　主窗口的设计与初始化　161
6．2．4　对话框QmyDialogSize的创建和使用　163
6．2．5　对话框QmyDialogHeaders的创建和使用　165
6．2．6　对话框QmyDialogLocate的创建和使用　166
6．3　多窗口应用程序　170
6．3．1　主要的窗体类及其用途　170
6．3．2　窗体类重要特性的设置　170
6．3．3　多窗口应用程序设计示例　172
6．4　MDI应用程序设计　179
6．4．1　MDI简介　179
6．4．2　文档窗体类QmyFormDoc的设计　180
6．4．3　主窗口设计与子窗口的使用　181
第7章　数据库　185
7．1　Qt SQL模块概述　185
7．1．1　Qt SQL支持的数据库　185
7．1．2　SQLite数据库　185
7．1．3　Qt SQL模块的主要类　187
7．2　QSqlTableModel的使用　188
7．2．1　功能概述　188
7．2．2　窗体可视化设计　190
7．2．3　窗体业务逻辑类的设计和初始化　190
7．2．4　打开数据库和数据表　191
7．2．5　添加、插入与删除记录　197
7．2．6　保存与取消修改　198
7．2．7　设置和清除照片　199
7．2．8　数据记录的遍历　199
7．2．9　记录的排序　200
7．2．10　记录的过滤　200
7．3　QSqlQueryModel的使用　201
7．3．1　QSqlQueryModel功能概述　201
7．3．2　窗体业务逻辑类的设计和初始化　202
7．3．3　打开数据库和查询数据　202
7．3．4　记录移动　205
7．4　QSqlQuery的使用　206
7．4．1　QSqlQuery基本用法　206
7．4．2　QSqlQueryModel和QSqlQuery联合使用　207
7．5　QSqlRelationalTableModel的使用　215
7．5．1　关系数据表和示例功能　215
7．5．2　关系数据模型功能实现　216
第8章　绘图　219
8．1　QPainter绘图　219
8．1．1　QPainter绘图系统　219
8．1．2　QPen的主要功能　221
8．1．3　QBrush的主要功能　223
8．1．4　渐变填充　224
8．1．5　QPainter绘制基本图形　227
8．2　坐标系统和坐标变换　230
8．2．1　坐标变换函数　230
8．2．2　坐标变换绘图实例　231
8．2．3　视口和窗口　234
8．2．4　绘图叠加的效果　236
8．3　自定义界面组件　237
8．3．1　功能概述　237
8．3．2　自定义QWidget子类QmyBattery　237
8．3．3　QmyBattery类的使用　239
8．4　Graphics View绘图架构　241
8．4．1　场景、视图与图形项　241
8．4．2　Graphics View的坐标系统　242
8．4．3　Graphics View相关的类　243
8．4．4　Graphics View程序基本结构　246
8．4．5　Graphics View绘图程序示例　250
第9章　文件　261
9．1　文件操作相关类概述　261
9．1．1　文件操作接口类QFile　261
9．1．2　文件流操作类QTextStream和QDataStream　262
9．1．3　目录和文件操作相关的类　262
9．2　文本文件读写　263
9．2．1　功能概述　263
9．2．2　QFile读写文本文件　263
9．2．3　QFile和QTextStream结合读写文本文件　266
9．2．4　Python内建函数读写文本文件　268
9．3　二进制文件读写　269
9．3．1　基础知识和工具软件　269
9．3．2　QDataStream功能概述　271
9．3．3　QDataStream流化数据读写　272
9．3．4　QDataStream原始数据读写　281
9．4　目录和文件操作　288
9．4．1　目录和文件操作相关的类　288
9．4．2　示例功能概述　288
9．4．3　QFile类　290
9．4．4　QFileInfo类　291
9．4．5　QDir类　292
9．4．6　QFileSystemWatcher类　294
第　10章 多媒体　297
10．1　PyQt5多媒体模块功能概述　297
10．2　音频播放　298
10．2．1　使用QMediaPlayer播放音乐文件　298
10．2．2　使用QSoundEffect和QSound播放音效文件　303
10．3　音频输入　304
10．3．1　使用QAudioRecorder录制音频　304
10．3．2　使用QAudioInput获取音频输入　310
10．4　视频播放　317
10．4．1　在QVideoWidget上显示视频　317
10．4．2　在QGraphicsVideoItem上播放视频　321
10．5　摄像头的使用　322
10．5．1　摄像头操作概述　322
10．5．2　示例功能和界面可视化设计　324
10．5．3　使用摄像头拍照　324
10．5．4　使用QMediaRecorder通过摄像头录像　328
第　11章 GUI设计增强技术　329
11．1　多语言界面　329
11．1．1　多语言界面设计概述　329
11．1．2　多语言界面设计示例　331
11．2　QSS定制界面　336
11．2．1　Qt样式表的作用　336
11．2．2　Qt样式表句法　337
11．2．3　Qt样式表的使用　342
第三部分　数据可视化
第　12章 PyQtChart二维绘图　346
12．1　PyQtChart概述　346
12．1．1　模块安装与基本功能　346
12．1．2　一个简单的PyQtChart绘图程序　347
12．1．3　图表的主要组成部分　348
12．2　QChart绘制折线图　350
12．2．1　示例功能概述与界面设计　350
12．2．2　QPen属性设置对话框设计　351
12．2．3　主窗口业务逻辑类初始化　353
12．2．4　图表各组成部件的属性设置　356
12．3　QChart绘图高级功能　365
12．3．1　功能概述　365
12．3．2　自定义类QmyChartView　366
12．3．3　主窗口可视化设计　368
12．3．4　绘图功能的实现　368
12．4　对数坐标轴和多坐标轴　373
12．4．1　功能概述　373
12．4．2　主窗口可视化设计　374
12．4．3　界面和图表初始化　374
12．4．4　载入数据文件并绘制曲线　375
12．5　饼图和各种柱状图　377
12．5．1　功能概述　377
12．5．2　窗口初始化与数据准备　378
12．5．3　其他界面操作功能的实现　381
12．5．4　柱状图　382
12．5．5　堆叠柱状图　387
12．5．6　百分比柱状图　388
12．5．7　饼图　390
12．6　蜡烛图和日期时间坐标轴　392
12．6．1　功能概述　392
12．6．2　界面和图表初始化　394
12．6．3　绘图功能的实现　395
12．7　区域填充图　399
12．7．1　功能概述　399
12．7．2　界面和图表初始化　400
12．7．3　绘图功能的实现　402
12．8　极坐标图　405
12．8．1　功能概述　405
12．8．2　绘制极坐标图　406
12．8．3　其他功能的实现　408
第　13章 PyQtDataVisualization三维绘图　411
13．1　PyQtDataVisualization模块概述　411
13．1．1　模块安装与导入　411
13．1．2　模块中主要的类　411
13．2　三维柱状图　413
13．2．1　功能概述　413
13．2．2　窗体可视化设计　413
13．2．3　初始化创建三维柱状图　414
13．2．4　其他功能的实现　417
13．3　三维散点图　424
13．3．1　功能概述　424
13．3．2　创建三维散点图　425
13．3．3　散点数据管理　427
13．4　三维曲面图　429
13．4．1　功能概述　429
13．4．2　三维曲面图　429
13．4．3　三维地形图　434
第　14章 Matplotlib数据可视化　437
14．1　Matplotlib的基本用法　437
14．1．1　Matplotlib的安装　437
14．1．2　一个脚本化的绘图程序　438
14．1．3　GUI程序中的Matplotlib绘图　439
14．2　图的主要元素的面向对象操作　443
14．2．1　图的主要组成元素　443
14．2．2　示例程序功能和窗体可视化设计　445
14．2．3　界面创建与初始化绘图　446
14．2．4　Figure对象的操作　450
14．2．5　Axes子图的操作　453
14．2．6　曲线设置　456
14．2．7　x轴和y轴设置　458
14．3　交互操作　464
14．3．1　交互功能概述　464
14．3．2　界面构造与初始化绘图　466
14．3．3　界面其他功能的实现　469
14．3．4　交互事件的处理　469
14．4　典型二维图的绘制　471
14．4．1　自定义绘图组件类QmyFigureCanvas　471
14．4．2　QmyFigureCanvas类的使用　473
14．4．3　直方图　475
14．4．4　填充图　476
14．4．5　饼图　477
14．4．6　火柴杆图　478
14．4．7　极坐标图　480
14．5　三维数据绘图　482
14．5．1　三维数据绘图概述　482
14．5．2　窗体初始化　483
14．5．3　绘制三维图　486
14．5．4　三维数据绘制二维图　487
14．5．5　colormap　488
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI与数据可视化编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Qt4编程
初 级 篇
第1章 qt初步实践	2
1.1 第一个qt程序	2
1.1.1 建立主程序	2
1.1.2 建立工程	3
1.1.3 编译/运行第一个qt应用程序	8
1.1.4 第一个qt程序的代码分析	9
1.2 使用qt布局管理器	11
1.3 关联操作	12
1.4 小结	13
第2章 对话框—— qdialog	14
2.1 自定义对话框	14
2.1.1 建立新类	14
2.1.2 添加子窗口部件	16
2.2 加入主程序	22
2.3 qt内建（built-in）对话框	25
2.4 小结	35
第3章 基础窗口部件—— qwidget	36
3.1 qt设计器绘制窗口部件	36
3.1.1 qt设计器基础	36
.3.1.2 绘制窗口部件	41
3.2 程序中引入自定义窗口部件	49
3.2.1 直接使用方式	49
3.2.2 单一继承方式	51
3.2.3 多继承方式	54
3.3 qt的信号和槽机制	55
3.3.1 基本原理	55
3.3.2 设计信号和槽	58
3.3.3 信号和槽的自动关联	66
3.4 窗口标志及几何布局	66
3.4.1 窗口标志	67
3.4.2 窗口部件的几何布局	69
3.5 qt对象模型	77
3.5.1 元对象系统	78
3.5.2 属性系统	79
3.5.3 对象树	82
3.6 隐式共享	85
3.7 小结	86
第4章 程序主窗口——qmainwindow	87
4.1 qmainwindow主窗口框架	87
4.2 qt设计器绘制主窗口	88
4.2.1 菜单	91
4.2.2 工具栏	94
4.2.3 中心部件	97
4.3 代码创建主窗口	99
4.3.1 创建资源文件	99
4.3.2 定义主窗口类	99
4.4 锚接部件	104
4.5 状态栏	107
4.6 实现文本编辑器功能	109
4.7 多文档	120
4.8 打印文档	122
4.9 小结	123
第5章 布局管理	124
5.1 qt布局管理器——qlayout	124
5.1.1 qt布局管理器简介	124
5.1.2 布局管理器及窗口部件大小
策略的应用	128
5.2 分裂器部件qsplitter	137
5.3 栈部件qstackedwidget	138
5.4 工作空间部件qworkspace	139
5.5 多文档区部件qmdiarea	153
5.6 小结	155
中 级 篇
第6章 2d绘图	158
6.1 arthur绘图基础	158
6.1.1 绘图	158
6.1.2 绘图设备	182
6.2 坐标系统与坐标变换	183
6.2.1 坐标系统	183
6.2.2 坐标变换	183
6.3 用不同的字体	184
6.4 绘图路径——qpainterpath	188
6.5 qimage与qpixmap绘图设备	190
6.5.1 qimage	190
6.5.2 pixmap	192
6.6 组合模式绘图	201
6.7 小结	210
第7章 graphics view框架	211
7.1 graphics view概述	211
7.1.1 graphics view体系结构	211
7.1.2 graphics view坐标系统	212
7.1.3 深入graphics view	213
7.2 图形效果	221
7.3 图形图像打印	222
7.3.1 普通打印过程	222
7.3.2 特殊窗口部件的打印	223
7.4 小结	224
第8章 拖放操作和剪贴板	225
8.1 拖放操作	225
8.1.1 拖放操作	225
8.1.2 定义新的拖放操作类型	228
8.1.3 graphics view框架下的拖放操作	228
8.2 使用剪贴板	230
8.3 小结	231
第9章 文件处理	232
9.1 读写文本文件	232
9.2 操作二进制文件	234
9.3 临时文件	236
9.4 目录操作和文件管理	236
9.4.1 目录操作	236
9.4.2 文件管理	238
9.5 监视文件系统变化	238
9.6 文件引擎	240
9.7 小结	240
第10章 网络	241
10.1 ftp客户端	241
10.2 http客户端	250
10.3 udp应用	254
10.4 tcp应用	258
10.5 高级应用	269
10.5.1 底层操作	269
10.5.2 使用代理	272
10.5.3 扩展qt网络功能	272
10.5.4 效率问题	276
10.6 小结	277
第11章 多线程	278
11.1 启动一个线程	278
11.2 线程互斥与同步	282
11.2.1 临界区问题	282
11.2.2 使用qmutex	283
11.2.3 使用qsemaphore	284
11.2.4 使用qwaitconditon	286
11.3 线程的其他问题	289
11.3.1 优先级问题	289
11.3.2 死锁及优先级反转问题	292
11.3.3 本地存储问题	294
11.4 qt的线程机制	295
11.4.1 可重入与线程安全	295
11.4.2 线程与事件循环	296
11.4.3 线程与信号/槽机制	297
11.4.4 多线程网络示例	298
11.5 并行计算	302
11.5.1 利用qtconcurrent启动线程	302
11.5.2 图片浏览器示例	303
11.6 小结	307
第12章 事件处理	308
12.1 事件机制	308
12.1.1 事件来源与类型	308
12.1.2 事件处理方法	309
12.2 事件处理器	310
12.3 事件过滤器	315
12.4 加快用户界面响应	318
12.4.1 使用processevents()函数	318
12.4.2 使用定时器	320
12.5 小结	322
第13章 数据库	323
13.1 连接数据库	323
13.2 常用数据库操作	328
13.2.1 使用sql语句	328
13.2.2 事务操作	330
13.2.3 使用sql模型类	331
13.2.4 数据表示	335
13.3 qt数据库应用	337
13.3.1 使用嵌入式数据库	337
13.3.2 使用oracle数据库	340
13.4 小结	352
高 级 篇
第14章 界面风格	354
14.1 使用qt风格	354
14.2 简单自定义风格	355
14.2.1 界面设计	355
14.2.2 自定义界面外观	356
14.2.3 换肤	372
14.3 qt风格原理	376
14.3.1 风格元素	377
14.3.2 风格选项	381
14.3.3 风格函数	383
14.3.4 风格调色板	384
14.3.5 风格绘制过程	386
14.4 高级自定义风格	390
14.5 qt样式表	407
14.5.1 样式表语法	407
14.5.2 样式表的应用	409
14.6 小结	412
第15章 xml	413
15.1 dom	413
15.1.1 dom入门	413
15.1.2 使用dom	414
15.1.3 使用dom写xml文件	417
15.2 sax	420
15.3 基于流的xml api	425
15.4 qtxmlpatterns模块	431
15.4.1 xslt	431
15.4.2 xquery	433
15.4.3 xml schema	437
15.5 小结	442
第16章 模型/视图结构	443
16.1 模型/视图结构与mvc设计模式	443
16.1.1 模型	444
16.1.2 视图	444
16.1.3 代理	445
16.2 使用已有的模型视图类	445
16.2.1 使用已有的模型和视图类	445
16.2.2 qlistwidget、qtreewidget和qtablewidget	447
16.3 模型（models）	459
16.3.1 模型索引	459
16.3.2 模型角色	460
16.3.3 自定义模型	461
16.3.4 代理模型	464
16.4 视图（views）	469
16.4.1 自定义视图	469
16.4.2 数据-窗口部件映射	469
16.5 代理（delegates）	475
16.5.1 使用已有的代理	475
16.5.2 自定义代理	475
16.6 拖放与选中	481
16.6.1 拖放操作	481
16.6.2 选中模式	484
16.7 小结	485
第17章 高级绘图	486
17.1 3d绘图——使用opengl	486
17.1.1 创建opengl窗口	486
17.1.2 着色	490
17.1.3 3d和旋转	491
17.1.4 纹理贴图	495
17.2 svg	498
17.2.1 绘制svg图形	498
17.2.2 生成svg文件	500
17.3 小结	501
第18章 进程与进程间通信	502
18.1 使用qprocess	502
18.2 linux进程间通信	505
18.3 共享内存与本地socket	506
18.4 新型进程间通信——d-bus	512
18.4.1 d-bus简介	513
18.4.2 接口与适配器	514
18.4.3 qtdbus应用实例	517
18.5 小结	527
第19章 qt插件	528
19.1 qt插件开发基础	528
19.2 qt设计器插件	529
19.2.1 使用scratchpad	529
19.2.2 提升自定义窗口部件	530
19.2.3 qt设计器插件开发	531
19.3 编写数据库插件	538
19.4 自定义风格插件	542
19.5 小结	545
第20章 脚本——qtscript	546
20.1 执行ecmascript脚本	546
20.2 qtscript中的信号和槽	547
20.3 使用javascript操作qt对象	550
20.4 基于prototype的继承	554
20.5 qtscript调试器	555
20.6 小结	556
第21章 国际化	557
21.1 unicode与字符编码	557
21.1.1 unicode	557
21.1.2 汉字编码	558
21.1.3 编码转换	558
21.2 qt linguist	561
21.2.1 发布管理器	561
21.2.2 翻译器	563
21.2.3 加载翻译文件	566
21.3 语言切换	566
21.4 小结	567
第22章 qt单元测试框架	568
22.1 qtestlib框架	568
22.1.1 qtestlib	568
22.1.2 第一个qt单元测试	569
22.2 数据驱动测试	570
22.3 gui测试	572
22.3.1 仿真gui事件	572
22.3.2 重放gui事件	573
22.4 基准测试	574
22.5 小结	575
第23章 动画与状态机框架	576
23.1 动画框架	576
23.2 状态机框架	578
23.3 实例分析	582
23.4 小结	594
第24章 webkit与多媒体	595
24.1 webkit	595
24.1.1 基于webkit的浏览器	595
24.1.2 添加openssl支持	596
24.1.3 qt webkit编程	597
24.2 phonon多媒体框架	597
24.2.1 phonon体系结构	597
24.2.2 phonon媒体播放器	600
24.3 小结	606
第25章 嵌入式qt	607
25.1 windows mobile平台	607
25.1.1 windows mobile平台qt应用开发流程	607
25.1.2 部署qt应用程序	611
25.1.3 使用移动电话仿真器	613
25.2 嵌入式linux平台	614
25.2.1 嵌入式linux平台qt体系结构	614
25.2.2 开发环境配置	616
25.3 嵌入式qt的裁剪	618
25.4 小结	618
附录a qt安装	619
附录b qt集成开发环境	624
附录c qmake速查	631
附录d qt资源	636
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Qt4编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Qt4编程
第1章走近Qt1
1.1Qt 简介1
1.2Qt纪事概览3
1.3Qt套件的组成5
1.4Qt 的授权7
1.5Qt的产品10
1.6Qt的服务与支持10
1.7Qt 的最新进展11
1.7.1增加协议11
1.7.2开放源代码库12
1.7.3确定Qt的发展方向12
1.7.4Qt 4.5——Qt发展的重要里程碑13
1.8为什么选择Qt17
1.9问题与解答19
1.10总结与提高21
第2章Qt 的安装与配置22
2.1获取Qt22
2.2协议说明23
2.3安装Qt23
2.3.1Qt/X11的安装23
2.3.2Qt/Windows的安装29
2.3.3Qt/Mac的安装39
2.3.4Qt/Windows CE39
2.3.5Qt/S6041
2.3.6基于Linux发行版的安装48
2.4配置Qt 4环境60
2.4.1Windows平台61
2.4.2X11平台61
2.5问题与解答62
2.6总结与提高63
第3章Qt编程基础64
3.1标准C++精讲64
3.1.1程序设计语言介绍64
3.1.2C++语法基础知识67
3.1.3C++高级应用——虚函数74
3.2Windows编程基础76
3.2.1需要掌握的技能76
3.2.2Windows运行机理76
3.2.3Windows编程基础81
3.3Linux 编程基础84
3.3.1你必须掌握的技能84
3.3.2文件系统管理85
3.3.3X Window系统87
3.3.4常用命令90
3.3.5Shell应用91
3.3.6使用库程序94
3.3.7使用vi97
3.3.8使用GCC100
3.3.9使用GDB104
3.4Mac编程基础110
3.4.1你必须掌握的技能110
3.4.2Mac OS X的系统架构110
3.4.3Mac OS X文件系统111
3.4.4Cocoa 应用开发简介115
3.4.5Xcode简介116
3.5问题与解答117
3.6总结与提高118
第4章Qt 4集成开发环境120
4.1常见的Qt IDE120
4.2Qt Creator121
4.2.1简介121
4.2.2主要特点121
4.2.3安装与配置122
4.3Eclipse122
4.3.1简介122
4.3.2主要特点123
4.3.3安装与配置123
4.3.4使用要领127
4.4Visual Studio 2008与Qt 4.5130
4.5问题与解答134
4.6总结与提高135
第5章使用Qt基本GUI工具137
5.1使用Qt Designer进行GUI 设计137
5.1.1简介137
5.1.2启动并设置Qt Designer138
5.1.3功能说明139
5.1.4Qt GUI设计基本流程142
5.2使用Qt Assistant获取在线文档与帮助146
5.2.1简介146
5.2.2Qt 的参考文档147
5.2.3使用Qt Assistant147
5.3使用Qt Demo学习Qt应用程序开发156
5.4问题与解答159
5.5总结与提高160
第6章Qt 4程序开发方法和流程161
6.1开发方法161
6.2Hello Qt!162
6.2.1基本流程162
6.2.2源码分析163
6.2.3编译运行164
6.2.4第2种方法166
6.2.5第3种方法172
6.3几个重要的知识点177
6.4问题与解答178
6.5总结与提高180
第7章对话框181
7.1QDialog类181
7.2子类化QDialog182
7.3快速设计对话框187
7.4常见内建对话框的使用195
7.4.1标准输入框195
7.4.2标准颜色对话框195
7.4.3标准字体对话框197
7.4.4标准消息对话框199
7.4.5标准对话框的使用实例201
7.5模态对话框与非模态对话框211
7.6问题与解答212
7.7总结与提高214
第8章主窗口215
8.1主窗口框架215
8.2创建主窗口的方法和流程216
8.2.1方法216
8.2.2流程217
8.3代码创建主窗口217
8.3.1头文件218
8.3.2实现文件219
8.4使用Qt Designer创建主窗口229
8.4.1创建菜单229
8.4.2创建动作233
8.4.3创建工具栏235
8.4.4创建锚接窗口部件235
8.4.5创建中心窗口部件236
8.5中心窗口部件专题236
8.5.1几种常见情形236
8.5.2创建和使用237
8.6Qt 4资源系统238
8.6.1Qt资源系统的改进238
8.6.2Qt 4资源集文件238
8.6.3资源文件的使用方法239
8.6.4资源浏览器的使用240
8.7锚接窗口241
8.7.1创建锚接窗口的方法和流程242
8.7.2设置锚接窗体状态的方法243
8.8多文档243
8.9问题与解答251
8.10总结与提高253
第9章Qt样式表与应用程序外观254
9.1应用程序的外观254
9.1.1应用程序的风格254
9.1.2如何设置样式255
9.2QStyle类的使用255
9.3样式表概述261
9.4使用样式表263
9.4.1与Qt Designer集成使用264
9.4.2样式表的应用实例265
9.5问题与解答275
9.6总结与提高276
第10章在程序中使用.ui文件277
10.1uic的使用277
10.2Ui_YourFormName.h文件的组成278
10.3编译时加入处理.ui文件的方法284
10.3.1直接使用法284
10.3.2单继承法285
10.3.3多继承法286
10.4运行时加入处理.ui文件的方法289
10.5信号与槽的自动连接290
10.5.1显式关联290
10.5.2自动关联291
10.6问题与解答291
10.7总结与提高292
第11章布局管理293
11.1基本概念和方法293
11.1.1摆放窗口部件的方法293
11.1.2布局管理器294
11.1.3优化布局结构297
11.2在Qt Designer中使用布局300
11.2.1应用和破除布局300
11.2.2快捷键302
11.3基本布局实践302
11.3.1QBoxLayout302
11.3.2水平布局304
11.3.3垂直布局304
11.3.4栅格布局305
11.3.5表单布局307
11.3.6删除布局内窗口部件的方法309
11.3.7基本布局的综合运用309
11.4堆栈布局315
11.4.1使用方法315
11.4.2如何索引窗口部件315
11.4.3实例——堆栈窗体317
11.5分裂器布局321
11.5.1使用方法322
11.5.2构造函数322
11.5.3一些深入的话题323
11.5.4分裂器布局实例323
11.6自定义布局管理器325
11.7布局管理经验总结325
11.8问题与解答326
11.9总结与提高327
第12章使用Qt Creator328
12.1Qt Creator概览328
12.1.1支持的平台328
12.1.2主要特点328
12.2Qt Creator的组成329
12.2.1模式选择器330
12.2.2输出面板333
12.2.3代码编辑器335
12.2.4会话管理器337
12.2.5Qt 帮助集成功能337
12.2.6Qt 设计师集成功能338
12.3快捷键和常用技巧339
12.4Qt Creator构建系统的设置339
12.5处理项目间依赖关系342
12.6Qt多版本共存时的管理342
12.7使用定位器在代码间快速导航343
12.7.1如何定位文件344
12.7.2如何设置过滤条件344
12.8如何创建一个项目348
12.9实例讲解350
12.9.1程序运行内部机理350
12.9.2设置环境350
12.9.3创建并组织项目351
12.9.4设计用户界面351
12.9.5头文件352
12.9.6实现文件352
12.9.7资源集文件353
12.9.8编译运行程序354
12.10使用Qt Creator调试程序354
12.10.1调试器引擎354
12.10.2与调试器交互355
12.10.3断点355
12.10.4程序的调试运行356
12.10.5堆栈视图357
12.10.6线程视图357
12.10.7局部变量和观察器视图357
12.10.8模块视图357
12.10.9反汇编视图和寄存器视图358
12.10.10程序调试实例358
12.11问题与解答360
12.12总结与提高361
第13章Qt核心机制与原理362
13.1Qt对标准C++的扩展362
13.2信号与槽362
13.3元对象系统367
13.4Qt的架构368
13.5Qt的事件模型370
13.6构建 Qt 应用程序372
13.7问题与解答373
13.8总结与提高375
附录Aqmake使用指南376
A.1qmake简介376
A.2使用qmake376
A.2.1.pro文件语法376
A.2.2qmake的存取函数379
附录Bmake命令382
B.1命令解释382
B.2使用make自动构建382
附录CQt资源384
C.1Qt 官方资源384
C.2Qt 开发社区385
C.2.1国际社区385
C.2.2国内社区385
C.2.3有关Qt的博客386
参考文献387
后记388
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Qt4编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt5开发及实例（第2版）
第1章  Qt概述
1.1  什么是Qt
1.2  Qt 5的安装
1.2.1  下载Qt 5
1.2.2  运行Qt 5 Creator
1.2.3  Qt 5开发环境
1.3  Qt 5开发步骤及实例
1.3.1  设计器Qt 5 Designer实现
1.3.2  代码实现简单实例
L1.2  Qt 5安装：概念解析
伙伴编辑模式（Edit Buddy）
L1.3  Qt 5开发步骤及实例：概念解析
L1  信号和槽机制（Signal ＆ Slot）
L2  Qt 5元对象系统
L3  布局管理器
第2章  Qt 5模板库、工具类及控件
2.1  字符串类
2.1.1  操作字符串
2.1.2  查询字符串数据
2.1.3  字符串的转换
2.2  容器类
2.2.1  QList类、QLinkedList类和QVector类
2.2.2  QMap类和QHash类
2.3  QVariant类
2.4  算法及正则表达式
2.4.1  Qt 5常用算法
2.4.2  基本的正则表达式
2.5  控件
2.5.1  按钮组（Buttons）
2.5.2  输入部件组（Input Widgets）
2.5.3  显示控件组（Display Widgets）
2.5.4  空间间隔组（Spacers）
2.5.5  布局管理组（Layouts）
2.5.6  容器组（Containers）
2.5.7  项目视图组（Item Views）
2.5.8  项目控件组（Item Widgets）
2.5.9  小综合例子
L2.1  字符串类QString：概念解析
L1  隐式共享
L2  内存分配策略
L2.5  Qt 5控件：概念解析
Qt5::WindowFlags枚举类型
第3章  Qt 5布局管理
3.1  分割窗口QSplitter类
3.2  停靠窗口QDockWidget类
3.3  堆栈窗体QStackedWidget类
3.4  基本布局（QLayout）
3.5 【综合实例】：修改用户资料
第4章  Qt 5基本对话框
4.1  标准文件对话框类
4.1.1  函数说明
4.1.2  创建步骤
4.2  标准颜色对话框类
4.2.1  函数说明
4.2.2  创建步骤
4.3  标准字体对话框类
4.3.1  函数说明
4.3.2  创建步骤
4.4  标准输入对话框类
4.4.1  标准字符串输入对话框
4.4.2  标准条目选择对话框
4.4.3  标准int类型输入对话框
4.4.4  标准double类型输入对话框
4.5  消息对话框类
4.5.1  Question消息框
4.5.2  Information消息框
4.5.3  Warning消息框
4.5.4  Critical消息框
4.5.5  About消息框
4.5.6  About Qt消息框
4.6  自定义消息框
4.7  工具盒类
4.8  进度条
4.9  调色板与电子钟
4.9.1  QPalette类
4.9.2  QTime类
4.9.3 【综合实例】：电子时钟
4.10  可扩展对话框
4.11  不规则窗体
4.12  程序启动画面（QSplashScreen）
第5章  Qt＆nbsp;5主窗体
5.1  Qt 5主窗体构成
5.1.1  基本元素
5.1.2 【综合实例】：文本编辑器
5.1.3  菜单与工具栏的实现
5.2  Qt 5文件操作功能
5.2.1  新建文件
5.2.2  打开文件
5.2.3  打印文件
5.3  Qt 5图像坐标变换
5.3.1  缩放功能
5.3.2  旋转功能
5.3.3  镜像功能
5.4  Qt 5文本编辑功能
5.4.1  设置字体
5.4.2  设置字号
5.4.3  设置文字加粗
5.4.4  设置字体倾斜
5.4.5  文字加下画线
5.4.6  设置文字颜色
5.4.7  设置字符格式
5.5  Qt 5排版功能
5.5.1  实现段落对齐
5.5.2  实现文本排序
第6章  Qt 5图形与图片
6.1  Qt 5位置相关函数
6.1.1  区别概述
6.1.2 【实例】
6.2  Qt 5基础图形的绘制
6.2.1  绘图框架设计
6.2.2  绘图区的实现
6.2.3  主窗口的实现
6.3  Qt 5双缓冲机制
6.3.1  原理与设计
6.3.2  绘图区的实现
6.3.3  主窗口的实现
6.4  显示Qt 5 SVG格式图片
L6.4  Qt 5 SVG格式图片显示：概念解析
XML
第7章  Qt 5图形视图框架
7.1  图形视图体系结构
7.1.1  Graphics View的特点
7.1.2  Graphics View的三元素
7.1.3  Graphics View的坐标系统
7.2 【实例】：图形视图
7.2.1  飞舞的蝴蝶
7.2.2  地图浏览器
7.2.3  图元创建
7.2.4  图元的旋转、缩放、切变和位移
第8章  Qt 5模型/视图结构
8.1  概述
8.1.1  基本概念
8.1.2  【实例】：模型/视图类使用
8.2  模型（Model）
8.3  视图（View）
8.4  代理（Delegate）
第9章  Qt 5文件及磁盘处理
9.1  读写文本文件
9.1.1  QFile类读写文本
9.1.2  QTextStream类读写文本
9.2  读写二进制文件
9.3  目录操作与文件系统
9.3.1  文件大小及路径获取实例
9.3.2  文件系统浏览实例
9.4  获取文件信息
9.5  监视文件和目录变化
第10章  Qt 5网络与通信
10.1  获取本机网络信息
10.2  基于UDP的网络广播程序
10.2.1  UDP协议工作原理
10.2.2  UDP 编程模型
10.2.3 【实例】：UDP服务器编程
10.2.4 【实例】：UDP客户端编程
10.3  基于TCP的网络聊天室程序
10.3.1  TCP协议工作原理
10.3.2  TCP编程模型
10.3.3 【实例】：TCP服务器编程
10.3.4 【实例】：TCP客户端编程
10.4  Qt网络应用开发初步
10.4.1 【实例】：简单网页浏览器
10.4.2  文件下载实例
第11章  Qt 5事件处理及实例
11.1  鼠标事件及实例
11.2  键盘事件及实例
11.3  事件过滤及实例
第12章  Qt 5多线程
12.1  多线程及简单实例
12.2  多线程控制
12.2.1  互斥量
12.2.2  信号量
12.2.3  线程等待与唤醒
12.3  多线程应用
12.3.1 【实例】：服务器编程
12.3.2 【实例】：客户端编程
第13章  Qt 5数据库
13.1  数据库基本概念
13.2  常用SQL命令
13.2.1  数据查询
13.2.2  数据操作
13.3  Qt操作数据库及实例
13.3.1  Qt操作SQLite数据库
13.3.2  Qt操作主/从视图及XML
第14章  Qt 5多国语言国际化
14.1  基本概念
14.1.1  国际化的支持的实现
14.1.2  翻译工作：“*.qm”文件的生成
14.2 【实例】
14.2.1  简单测试
14.2.2  选择语言翻译文字
第15章  Qt 5单元测试框架
15.1  QTestLib框架
15.2  简单的Qt单元测试
15.3  数据驱动测试
15.4  简单性能测试
第16章  【综合实例】：汽车销售管理系统
16.1  功能介绍与界面设计
16.1.1  功能简介
16.1.2  主界面设计
16.1.3  菜单设计
16.2  实现品牌车管理功能
16.2.1  出售车辆
16.2.2  日销售清单
16.3  销售统计图表功能
16.3.1  视图设计
16.3.2  界面设计
16.4  添加登录界面
第17章  【综合实例】：Qt版W
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt5开发及实例（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt5开发及实例(附光盘第3版)
第1章 Qt概述 1
1．1 什么是Qt 1
1．2 Qt 5的安装 2
1．2．1 下载安装Qt 5 2
1．2．2 运行Qt 5 Creator 5
1．2．3 Qt 5开发环境 6
1．3 Qt 5开发步骤及实例 8
1．3．1 设计器Qt 5 Designer实现 8
1．3．2 代码实现简单实例 15
L1．2 Qt 5安装：概念解析 18
伙伴编辑模式（Edit Buddies） 18
L1．3 Qt 5开发步骤及实例：概念解析 19
L1 信号和槽机制（Signal ＆ Slot） 19
L2 Qt 5元对象系统 21
L3 布局管理器 21
第2章 Qt 5模板库、工具类及控件 22
2．1 字符串类 22
2．1．1 操作字符串 22
2．1．2 查询字符串数据 24
2．1．3 字符串的转换 24
2．2 容器类 26
2．2．1 QList类、QLinkedList类和QVector类 26
2．2．2 QMap类和QHash类 32
2．3 QVariant类 35
2．4 算法及正则表达式 37
2．4．1 Qt 5常用算法 37
2．4．2 基本的正则表达式 38
2．5 控件 39
2．5．1 按钮组（Buttons） 40
2．5．2 输入部件组（Input Widgets） 41
2．5．3 显示控件组（Display Widgets） 43
2．5．4 空间间隔组（Spacers） 44
2．5．5 布局管理组（Layouts） 44
2．5．6 容器组（Containers） 44
2．5．7 项目视图组（Item Views） 47
2．5．8 项目控件组（Item Widgets） 49
2．5．9 小综合例子 53
L2．1 字符串类QString：概念解析 56
L1 隐式共享 56
L2 内存分配策略 58
L2．5 Qt 5控件：概念解析 58
Qt：：WindowFlags枚举类型 58
第3章 Qt 5布局管理 61
3．1 分割窗口QSplitter类 61
3．2 停靠窗口QDockWidget类 63
3．3 堆栈窗体QStackedWidget类 66
3．4 基本布局（QLayout） 69
3．5 【综合实例】：修改用户资料 74
第4章 Qt 5基本对话框 86
4．1 标准文件对话框类 90
4．1．1 函数说明 90
4．1．2 创建步骤 91
4．2 标准颜色对话框类 92
4．2．1 函数说明 92
4．2．2 创建步骤 92
4．3 标准字体对话框类 93
4．3．1 函数说明 93
4．3．2 创建步骤 94
4．4 标准输入对话框类 94
4．4．1 标准字符串输入对话框 98
4．4．2 标准条目选择对话框 98
4．4．3 标准int类型输入对话框 99
4．4．4 标准double类型输入对话框 100
4．5 消息对话框类 101
4．5．1 Question消息框 104
4．5．2 Information消息框 105
4．5．3 Warning消息框 105
4．5．4 Critical消息框 106
4．5．5 About消息框 107
4．5．6 About Qt消息框 107
4．6 自定义消息框 108
4．7 工具盒类 109
4．8 进度条 114
4．9 调色板与电子钟 118
4．9．1 QPalette类 118
4．9．2 QTime类 124
4．9．3 【综合实例】：电子时钟 125
4．10 可扩展对话框 128
4．11 不规则窗体 131
4．12 程序启动画面（QSplashScreen） 134
第5章 Qt 5主窗口 137
5．1 Qt 5主窗口构成 137
5．1．1 基本元素 137
5．1．2 【综合实例】：文本编辑器 138
5．1．3 菜单与工具栏的实现 142
5．2 Qt 5文件操作功能 147
5．2．1 新建文件 147
5．2．2 打开文件 148
5．2．3 打印文件 150
5．3 Qt 5图像坐标变换 153
5．3．1 缩放功能 153
5．3．2 旋转功能 154
5．3．3 镜像功能 156
5．4 Qt 5文本编辑功能 157
5．4．1 设置字体 160
5．4．2 设置字号 161
5．4．3 设置文字加粗 161
5．4．4 设置文字斜体 161
5．4．5 设置文字加下画线 162
5．4．6 设置文字颜色 162
5．4．7 设置字符格式 163
5．5 Qt 5排版功能 163
5．5．1 实现段落对齐 164
5．5．2 实现文本排序 165
第6章 Qt 5图形与图片 169
6．1 Qt 5位置相关函数 169
6．1．1 区别概述 169
6．1．2 【实例】：位置函数的使用 170
6．2 Qt 5基础图形的绘制 174
6．2．1 绘图框架设计 174
6．2．2 绘图区的实现 175
6．2．3 主窗口的实现 180
6．3 Qt 5双缓冲机制 193
6．3．1 原理与设计 193
6．3．2 绘图区的实现 195
6．3．3 主窗口的实现 198
6．4 显示Qt 5 SVG格式图片 201
L6．4 Qt 5 SVG格式图片显示：概念解析 207
XML 207
第7章 Qt 5图形视图框架 209
7．1 图形视图体系结构 209
7．1．1 Graphics View的特点 209
7．1．2 Graphics View的三元素 209
7．1．3 GraphicsView的坐标系统 211
7．2 【实例】：图形视图 213
7．2．1 飞舞的蝴蝶 213
7．2．2 地图浏览器 216
7．2．3 图元创建 222
7．2．4 图元的旋转、缩放、切变和位移 232
第8章 Qt 5模型/视图结构 239
8．1 概述 239
8．1．1 基本概念 240
8．1．2 【实例】：模型/视图类使用 240
8．2 模型（Model） 242
8．3 视图（View） 246
8．4 代理（Delegate） 259
第9章 Qt 5文件及磁盘处理 268
9．1 读写文本文件 268
9．1．1 QFile类读写文本 268
9．1．2 QTextStream类读写文本 270
9．2 读写二进制文件 272
9．3 目录操作与文件系统 274
9．3．1 文件大小及路径获取实例 274
9．3．2 文件系统浏览 276
9．4 获取文件信息 280
9．5 监视文件和目录变化 284
第10章 Qt 5网络与通信 287
10．1 获取本机网络信息 287
10．2 基于UDP的网络广播程序 291
10．2．1 UDP协议工作原理 291
10．2．2 UDP 编程模型 291
10．2．3 【实例】：UDP服务器编程 292
10．2．4 【实例】：UDP客户端编程 294
10．3 基于TCP的网络聊天室程序 297
10．3．1 TCP协议工作原理 298
10．3．2 TCP编程模型 298
10．3．3 【实例】：TCP服务器编程 299
10．3．4 【实例】：TCP客户端编程 305
10．4 Qt网络应用开发初步 310
10．4．1 【实例】：简单网页浏览器 311
10．4．2 文件下载实例 312
第11章 Qt 5事件处理及实例 316
11．1 鼠标事件及实例 316
11．2 键盘事件及实例 319
11．3 事件过滤及实例 325
第12章 Qt 5多线程 331
12．1 多线程及简单实例 331
12．2 多线程控制 335
12．2．1 互斥量 336
12．2．2 信号量 337
12．2．3 线程等待与唤醒 341
12．3 多线程应用 344
12．3．1 【实例】：服务器编程 344
12．3．2 【实例】：客户端编程 349
第13章 Qt 5数据库 354
13．1 数据库基本概念 354
13．2 常用SQL命令 357
13．2．1 数据查询 357
13．2．2 数据操作 361
13．3 Qt操作数据库及实例 362
13．3．1 Qt操作SQLite数据库 363
13．3．2 Qt操作主/从视图及XML 369
第14章 Qt 5多国语言国际化 400
14．1 基本概念 400
14．1．1 国际化支持的实现 400
14．1．2 翻译工作：“*．qm”文件的生成 401
14．2 【实例】：国际化测试 402
14．2．1 简单测试 402
14．2．2 选择语言翻译文字 406
第15章 Qt 5单元测试框架 411
15．1 QTestLib框架 411
15．2 简单的Qt单元测试 411
15．3 数据驱动测试 416
15．4 简单性能测试 419
第16章 【综合实例】：汽车销售管理系统 421
16．1 功能介绍与界面设计 421
16．1．1 功能简介 421
16．1．2 主界面设计 422
16．1．3 菜单设计 423
16．2 实现品牌车管理功能 425
16．2．1 出售车辆 425
16．2．2 日销售清单 431
16．3 销售统计图表功能 436
16．3．1 视图设计 436
16．3．2 界面设计 440
16．4 添加登录界面 443
第17章 【综合实例】：Qt版Word字处理软件 447
17．1 核心功能界面演示 447
17．2 界面设计与开发 448
17．2．1 建立MDI程序框架 449
17．2．2 菜单系统设计 453
17．2．3 工具栏设计 464
17．2．4 子窗口管理 468
17．2．5 界面生成试运行 475
17．3 基本编辑功能实现 479
17．3．1 打开文件 479
17．3．2 保存文件 482
17．3．3 文本操作 485
17．4 文档排版美化功能实现 487
17．4．1 字体格式设置 487
17．4．2 段落对齐设置 490
17．4．3 颜色设置 491
17．4．4 段落标号、编号 492
17．4．5 文档打印与预览 495
第18章 【综合实例】：Qt版聊天软件 498
18．1 核心功能界面演示 498
18．2 界面设计与开发 499
18．2．1 创建“抽屉盒” 499
18．2．2 设计聊天窗口 504
18．2．3 将图片按钮与聊天窗口关联 506
18．3 基本聊天会话功能实现 511
18．3．1 基本原理 511
18．3．2 消息类型与UDP广播 512
18．3．3 会话过程的处理 516
18．3．4 聊天程序试运行 518
18．4 文件传输功能实现 519
18．4．1 需求方案 519
18．4．2 服务器开发 520
18．4．3 客户端开发 526
18．4．4 主界面的控制 531
18．4．5 文件传输试验 534
18．5 附加功能实现 535
18．5．1 更改字体、字号和颜色 535
18．5．2 字体切换 537
18．5．3 保存和清除聊天记录 538
第19章 QML编程基础 540
19．1 QML概述 540
19．1．1 第一个QML程序 540
19．1．2 QML文档构成 543
19．1．3 QML基本语法 544
19．2 QML可视元素 547
19．2．1 Rectangle（矩形）元素 547
19．2．2 Image（图像）元素 549
19．2．3 Text（文本）元素 550
19．2．4 自定义元素（组件） 552
19．3 QML元素布局 555
19．3．1 Positioner（定位器） 555
19．3．2 Anchor（锚） 559
19．4 QML事件处理 564
19．4．1 鼠标事件 564
19．4．2 键盘事件 566
19．4．3 输入控件与焦点 569
19．5 QML集成JavaScript 571
19．5．1 调用JavaScript函数 571
19．5．2 导入JS文件 573
第20章 QML动画特效 576
20．1 QML动画元素 576
20．1．1 PropertyAnimation元素 576
20．1．2 其他动画元素 581
20．1．3 Animator元素 583
20．2 动画流UI界面 585
20．2．1 状态和切换 586
20．2．2 设计组合动画 589
20．3 图像特效 592
20．3．1 3D旋转 592
20．3．2 色彩处理 594
20．4 Qt 5．5（Qt Quick Extras 1．4）新增饼状菜单 596
第21章 Qt Quick Controls开发基础 599
21．1 Qt Quick Controls概述 599
21．1．1 第一个Qt Quick Controls程序 599
21．1．2 Qt Quick窗体应用程序的构成 601
21．2 Qt Quick控件 606
21．2．1 概述 606
21．2．2 基本控件 607
21．2．3 高级控件 612
21．2．4 样式定制 617
21．3 Qt Quick对话框 625
21．4 Qt Quick导航视图 631
21．5 Qt 5．5（Qt Quick Controls 1．4）新增组件 636
第22章 Qt Quick Controls 2新颖界面开发 641
22．1 Qt Quick Controls 2简介 641
22．1．1 第一个Qt Quick Controls 2程序 642
22．1．2 Qt Quick Controls 2程序的构成 645
22．2 Qt Quick Controls 2与1的比较 649
22．2．1 ApplicationWindow结构不同 649
22．2．2 Menu不支持窗口主菜单 653
22．2．3 控件实现差异 655
22．3 滑动翻页及隐藏面板 660
22．4 选项列表 665
22．5 带功能按钮的列表 669
第23章 【综合实例】：多功能文档查看器 676
23．1 核心功能界面演示 676
23．2 界面与程序框架设计 678
23．2．1 准备应用资源 679
23．2．2 主程序代码框架 680
23．3 浏览网页功能实现 687
23．3．1 实现HtmlHandler处理器 687
23．3．2 编写Action 692
23．3．3 定义主显示区元素 692
23．3．4 实现“打开网页”对话框 692
23．4 阅读文本功能实现 693
23．4．1 实现TextHandler处理器 694
23．4．2 编写Action 697
23．4．3 定义主显示区元素 698
23．4．4 实现“打开文本”对话框 699
23．5 查看图片功能实现 700
23．5．1 编写Action 700
23．5．2 定义主显示区元素 701
23．5．3 实现“打开图片”对话框 702
23．5．4 对图片的处理 703
附录 A C++相关知识 705
A．1 C++程序结构 705
A．2 C++预处理 706
A．3 C++异常处理 708
A．4 C++面向对象编程 711
附录 B Qt 5简单调试 721
B．1 修正语法错误 721
B．2 设置断点 722
B．3 程序调试运行 722
B．4 查看和修改变量的值 723
B．5 qDebug()的用法 726
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt5开发及实例(附光盘第3版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>QTP自动化测试进阶
第1篇  自动化测试基础篇第1章  软件测试基础  1.1  软件缺陷与软件测试    1.1.1  软件缺陷与硬件缺陷的异同    1.1.2  如何通过软件测试发现软件缺陷  1.2  软件质量与软件测试    1.2.1  软件质量管理在项目管理中的地位    1.2.2  软件开发模式与软件测试    1.2.3  软件开发模式与自动化测试    1.2.4  软件测试能保证软件质量吗  1.3  软件开发与软件测试    1.3.1  软件开发与软件测试的对立统一    1.3.2  测试人员需要的开发技术    1.3.3  OTP自动化测试工程师需要掌握的技术第2章  软件自动化测试  2.1  手工测试与自动化测试    2.1.1  手工测试的缺点    2.1.2  什么时候使用自动化测试    2.1.3  自动化测试——你准备好了吗  2.2  如何开展自动化测试    2.2.1  选取合适的测试项目来开展自动化测试    2.2.2  确定自动化测试介入的时机    2.2.3  自动化测试工程师的知识体系    2.2.4  考虑自动化测试的成本    2.2.5  制订自动化测试项目计划  2.3  自动化测试方案    2.3.1  选择自动化测试方案    2.3.2  自动化测试脚本的编写方法    2.3.3  线性脚本的编写方法    2.3.4  结构化脚本的编写方法    2.3.5  共享脚本的编写方法  ……第3章  软件自动化测试工具第2篇  QTP使用基础篇第4章  QuickTest Professional的安装和配置第5章  QuickTest Professional的基本使用方法第6章  QuickTest Professional与其他工具的整合第3篇  QTP脚本开发篇第7章  关键字驱动测试第9章  VBScript基础第10章  QTP测试脚本开发第11章  QTP描述性编程第12章  使用QTP测试标准Windows对象第13章  使用QTP测试ActiveX对象第14章  使用QTP测试VB对象第15章  使用QTP测试Web对象第4篇  QTP高级技术篇第16章  QTP的插件技术第17章  使用QTP的.NET插件测试.NET平台软件第18章  QTP的.NET插件扩展技术及其使用第19章  QTP的自动化对象模型及其使用第20章  使用QTP开发一个猴子测试工具第21章  使用QTP测试Web Services第22章  如何编写高质量的QTP测试脚本附录A  QTP  10新特性介绍附录B  QTP小技巧和代码集锦附录C  Type方法及DeviceReplay的键值常量表附录D  QTP面试笔试题附录E  QTP学习资源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>QTP自动化测试进阶
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>QTP自动化测试权威指南
第1章　简介
1.1 什么是自动化测试
1.2 自动化测试流程
1.3 什么是HP QuickTest
Professional（QTP）
1.4 开始使用QTP
1.4.1 从HP网站下载
QTP
1.4.2 安装QTP
1.5 QTP许可证模式
第2章　QTP帮助文档的使用
2.1 目录标签（Contents Tab）
2.1.1 对象属性通过GetROProperty
函数返回
2.1.2 测试对象提供的方法
2.2 索引标签（Index Tab）
2.3 搜索标签（Search Tab）
第3章　对象库
3.1 对象是如何被添加到对象库的
3.2 测试对象和运行时对象
3.2.1 TO属性
3.2.2 对象库模式
3.2.3 每个Action对应的
公共对象库
3.3 对象探测器（Object Spy）
3.4 对象识别
（Object Identification）
3.5 用户定义的对象
第4章　数据池
4.1 设计时和运行时数据表
4.2 何时使用全局数据表或者
局部数据表
4.3 设置数据池的迭代
（Setting data table iterations）
4.4 数据池对象模型
（Data table object model）
4.5 数据池的格式
（Data table formatting）
第5章　操作模块（Aciton）
5.1 输入和输出参数
5.2 操作模块的类型
5.2.1 Inserting Calls to Actions
5.2.2 Insert Call to New…
5.2.3 Insert Call to Existing…
5.2.4 Insert Call to Copy…
第6章　QTP环境变量
6.1 环境变量的类型
6.2 Environment对象
第7章　保留对象
7.1 Crypt对象
7.2 OptionalStep对象
7.3 PathFinder对象
7.4 RandomNumber对象
7.5 Setting对象
7.6 WebUtil对象
7.7 SystemUtil对象
7.8 RegisterUserFunc对象
第8章　检查点
8.1 检查点的类型
8.2 QTP内嵌检查点的问题
8.3 检查点的替代方法
8.4 运行时更新检查点
第9章　库函数文件
9.1 关联一个全局库函数文件
9.2 运行时动态加载本地库函数
文件
9.3 运行时动态加载全局库函数
文件
9.4 理解执行作用域
9.5 Option Explicit的适用性
9.6 全局作用域内执行本地作用
域代码
第10章　描述性编程
10.1 对象识别
10.2 何时使用描述性编程
10.3 描述性编程语法
10.3.1 使用描述对象
10.3.2 Micclass标识符
10.4 使用描述字符串
10.5 列举ChildObjects
10.6 将基于对象库的脚本转换成
基于描述性编程的脚本
10.7 使用VBScript描述性编程
对象库
10.8 Index标识符问题
10.9 多浏览器应用
10.10 浏览器识别问题
10.10.1 使用OpenTitle识别
浏览器
10.10.2 使用唯一的OpenURL
属性识别浏览器
第11章　QTP的调试功能
11.1 打开调试配置项
11.2 断点的使用
11.3 Watch Tab页的使用
11.4 Variables Tab页的使用
11.5 Command Tab页的使用
第12章　场景恢复
12.1 什么时候场景恢复无法使用
12.2 各种场景恢复无法工作的
情况
12.3 针对IE验证窗口的场景
恢复处理
12.4 QTP各种默认场景恢复
12.5 Recovery对象
12.6 场景恢复函数调用
12.7 错误处理
第13章　正则表达式
13.1 正则表达式字符
13.2 何时在QTP中使用正则
表达式
13.3 使用代码验证正则表达式
13.3.1 使用正则表达式选择
WebList或WebRadioGroup
的值
13.3.2 使用正则表达式
提取信息
13.3.3 使用正则表达式
替换数据
第14章　VBScript
14.1 字符串
14.2 转换函数
14.3 日期和时间函数
14.5 其他函数
14.5.1 TypeName
14.5.2 VarType
14.5.3 GetRef
14.5.4 CreateObject
14.5.5 GetObject
14.6 使用数组
14.6.1 定长数组
14.6.2 动态数组
14.6.3 执行语句
14.6.4 Eval函数
14.6.5 VBScript可选参数
第15章　同步点
15.1 同步点
15.2 检查对象的存在
15.3 事件（Events）
15.4 回放模式（Replay Option）
第16章　测试结果
16.1 在结果报告中过滤步骤
16.2 报告自定义测试步骤
16.3 在测试结果中插入文件
16.4 在测试结果中插入快照
16.5 转化XML结果为
HTML格式
16.6 配置QTP生成HTML
结果报告
16.7 QTP Reporter对象
16.8 在脚本最后访问测试
结果
第17章　API应用
17.1 Extern对象
17.1.1 VB API定义语法
17.1.2 QTP API定义
17.2 QTP API的限制
17.2.1 使用VB6的API COM
对象
17.3 通过Excel执行API
17.4 动态生成Excel宏
17.5 使用模式对话框
第18章　QTP自动化对象模型
18.1 QTP自动化对象模型
（AOM）
18.2 传递参数给测试用例
18.2.1 使用测试参数
18.2.2 传递测试参数
第19章　HTML DOM
19.1 何时应该使用HTML DOM
19.2 何时不宜使用HTML DOM
19.3 HTML DOM对象集
19.3.1 HTML节点
19.3.2 Document对象
19.3.3 HTML元素对象
19.3.4 HTML元素集
19.3.5 使用DOM获取Web
页面的元素
19.4 其他HTML元素
19.5 转化DOM对象为QTP
测试封装对象
19.6 使用样式表单验证外观
19.7 通过文本选择单选框
第20章　WebTables应用
20.1 WebTables
20.2 访问WebTable
20.2.1 使用index
20.2.2 使用Name或
HTML ID
20.2.3 使用innerText/
outerText
20.2.4 使用对象库
20.2.5 使用Table中的对象
20.2.6 获取Table中对象的
位置
20.3 点击Webtable内部
20.4 Table的异步加载
20.5 导出WebTable数据到
DataTable
20.6 WebTable功能扩展
20.6.1 通过dom元素中
获取Table
20.6.2 搜索查找Table中的
单元格
第21章　XML应用
21.1 QTP XML对象
21.2 读取和修改XML
21.3 处理应用程序的多个
环境变量文件
21.4 输出XML到数据表
21.5 比较XML
第22章　数据库应用
22.1 连接一个数据库
22.2 构建连接字符串
22.2.1 连接向导
22.2.2 检查连接对象或者
结果集对象的状态
22.3 将查询结果导出DataTable
22.4 执行数据库存储过程
第23章　Microsoft Excel应用
23.1 Excel自动化对象模型
23.2 将VBA转换为VBScript
第24章　Outlook应用
24.1 Outlook对象模型
24.1.1 连接Outlook应用程序
24.1.2 登录到名称空间
（Namespace）
24.1.3 遍历顶级文件夹
24.1.4 用户交互式的
获取文件夹
24.1.5 获取默认文件夹
24.2 读取邮件消息
24.2.1 访问电子邮件的
消息属性
24.2.2 下载附件
24.3 发送电子邮件消息
24.4 Outlook安全对话框
24.5 从电子邮件消息中
获得地址
24.6 点击在电子邮件消息中的
链接
24.7 使用电子邮件触发QTP
第25章　Microsoft Word应用
Word自动化对象模型
第26章　Microsoft IE应用
26.1 打开Internet Explorer（IE）
26.2 IE COM方法和属性
26.3 页面同步
26.4 枚举所有IE窗口
26.5 查找IE窗口
26.6 打开新浏览器
26.7 获取Web页面DOM
26.8 访问网页脚本变量
26.9 使用IE获取用户输入
26.10 IE弹出对话框
26.10.1 禁止IE对话框
26.10.2 通过注册表改变
IE设置
26.10.3 弹出窗口拦截器
26.10.4 禁止脚本出错
对话框
26.10.5 安全警告-重定向
弹出框
26.10.6 证书安全警告
26.10.7 安全连接警告
26.10.8 安全提示-安全和
非安全项
26.10.9 活动内容/Java Script
显示
26.10.11 文件下载信息条
26.11 使用代码处理弹出对话框
26.12 文件下载-安全警告弹出框
26.13 检查网页中的失效图片
26.14 把Browser对象当作Window
对象使用
26.15 定制Browser应用程序
第27章　HP Quality Center应用
27.1 Quality Center
27.2 用QTP连接QC
27.3 QC路径
27.4 QC中的相对路径
27.5 QCUtil对象
27.6 QC开放式测试体系（OTA）
27.7 TDConnection对象
27.7.1 Command and Recordset
对象
27.7.2 AttachmentFactory
Collection
27.7.3 从QC下载文件的
简便方法
27.7.4 上传附件到QC
27.8 获取当前测试的位置
27.9 列举TestLab文件夹中所有的
测试
27.10 列举Test Lab标签页中所有的
测试
27.11 获取当前测试集的位置
第28章　QTP高级应用
28.1 不同机器的测试脚本
同步执行
28.2 遍历所有Settings变量
28.3 利用脚本停止脚本并重新
运行脚本
28.4 运行时添加场景恢复
28.5 在脚本执行完毕时执行代码
28.6 使对象在网页中可见
28.7 高级文本检查点
28.8 利用Class类扩展测试
对象
28.9 Jscript在QTP中的应用
28.9.1 传递可变数量参数
给函数
28.9.2 域的差异
28.9.3 使用Try…Catch
错误捕获
28.9.4 Jscript数组应用
28.9.5 JS类的应用
28.10 对象类映射
第29章　QTP11
29.1 IDE增强
29.1.1 注释
29.1.2 增强的智能提示功能
29.1.3 Run to Step， Debug from
Step和Run from Step
29.1.4 启用/禁用断点
29.1.5 重命名检查点
29.1.6 自定义函数生成器
29.1.7 函数库功能的增强
29.2 Web拖拽（Drag）和下拉
（Drop）方法的支持
29.3 鼠标中间键与右键的
点击方法
29.4 对象属性支持Firefox
浏览器
29.5 使用XPATH或者CSS识别
Web对象
29.6 正则表达式计算器
29.7 在网页中执行JavaScript
29.8 菜单更新
29.9 新的配置选项
29.9.1 忽略浏览器
29.9.2 捕捉视频到报告中
29.10 新增和增强保留对象
（Utility Objects）
29.10.1 QCUtil
29.10.2 SystemUtil
29.11 输出Log功能
29.11.1 隐藏Log输出窗口
29.11.2 显示Log输出窗口
29.11.3 清除Log输出窗口
29.11.4 利用脚本获取Log
并输出窗口的文本
29.12 在运行时载入并运行操作模块
（Action）
29.13 Repository保留对象
29.14 本地系统监测
29.15 报告增强
29.15.1 报告图片
29.15.2 支持在结果报告中
记录信息
29.16 计时器（MercuryTimer）
29.17 对象库集合
（RepositoriesCollection）
29.18 DotNetFactory
29.19 获取对象库中测试对象的
对象名称
29.20 对象库的增强功能
29.20.1 本地对象库（Local
Object Repository，
LOR）
29.20.2 共享对象库（SOR）
29.20.3 关联共享对象库
（SOR）到测试脚本
29.21 增加对象到共享
对象库（SOR）
29.21.1 利用增加对象按钮来
增加对象到SOR
29.21.2 手动定义对象
29.21.3 通过对象识别器（Spy）
添加对象
29.21.4 导航与学习（Navigate
and Learn）
29.21.5 对象库其他相关的
功能
29.21.6 定位对象库中的对象
29.21.7 从被测应用程序中
更新对象
29.21.8 本地对象库和共享对象
库的优先级
29.21.9 对象库参数（Object
Repository Parameters，
ORP）
29.21.10 对象库的导入与
导出
29.21.11 更新本地对象库
29.21.12 解决对象合并
过程中的冲突
29.21.13 对象库合并工具
29.21.14 对象库对比工具
29.21.15 本地对象库VS
共享对象库
29.22 对象探测器（Object Spy）
第30章　.NET类的应用
30.1 使用DotNetFactory对象
30.2 传递参数到类构造函数
30.3 传递参数到.NET对象
30.4 传递枚举类型（Enums）
30.5 使用.NET数组
30.6 播放Wav文件
30.7 使用剪贴板
30.8 获取计算机信息
30.9 访问注册表
30.10 Ping IP地址
30.11 检测键盘控制键状态
30.12 .NET数组再探
30.13 使用.NET栈
30.14 使用.NET队列
30.15 使用.NET日期和
时间格式化
30.16 使用.NET发送Email
30.16.1 将图片转换为其他
文件格式
30.16.2 使用.NET窗体获取
用户输入
第31章　框架设计
31.1 设计规范
31.2 QTP示例
31.2.1 复用性
31.2.2 不同版本应用的支持
31.2.3 从外部可配
31.2.4 日志
31.2.5 自动配置
第32章　实用工具
32.1 QTP Script Editor
（QTP脚本编辑器）
32.2 VBSEdit
32.3 Notepad++
32.4 QTP Uninstaller V3
32.5 ScreenCapture API
32.6 KnowledgeInbox IE
Session Cookies Helper
32.7 VB-QTP API脚本转换器
32.8 IE WebDeveloper
32.9 Test Design Studio（TDS）
32.10 RAD正则表达设计工具
附录A
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>QTP自动化测试权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Linux环境下Qt4图形界面与MySQL编程
出版者的话
中文版序
译者序
英文版序
前言
第1章　引言1
1.1　形式化方法2
1.2　开发与学习形式化方法3
1.3　使用形式化方法5
1.4　应用形式化方法6
1.5　本书概要7
第2章　预备知识8
2.1　集合表示法8
2.2　字符串和语言9
2.3　图10
2.4　计算复杂度和可计算性12
2.5　扩展阅读16
第3章　逻辑和定理证明17
3.1　一阶逻辑17
3.2　项17
3.2.1　赋值和解释18
3.2.2　多个论域上的结构19
3.3　一阶公式19
3.4　命题逻辑23
3.5　证明一阶逻辑公式24
3.5.1　正向推理25
3.5.2　反向推理26
3.6　证明系统的属性26
3.6.1　正确性27
3.6.2　完备性27
3.6.3　可判定性27
3.6.4　结构完备性28
3.7　证明命题逻辑属性28
3.8　一个实用的证明系统29
3.9　证明示例31
3.10　机器辅助证明37
3.11　机械化定理证明器39
3.12　扩展阅读39
第4章　软件系统建模40
4.1　顺序系统、并发系统及反应式系统41
4.2　状态42
4.3　状态空间43
4.4　转换系统44
4.5　转换的粒度47
4.6　为程序建模的例子48
4.6.1　整数除法48
4.6.2　计算组合数49
4.6.3　Eratosthenes筛法50
4.6.4　互斥52
4.7　非确定性转换53
4.8　将命题变量赋给状态54
4.9　合并状态空间55
4.10　线性视角56
4.11　分支视角57
4.12　公平性58
4.13　偏序视角61
4.13.1　一个银行系统的例子61
4.13.2　线性化和全局状态63
4.13.3　一个简单的例子64
4.13.4　偏序模型的应用65
4.14　形式化建模65
4.15　一个项目的建模67
4.16　扩展阅读68
第5章　形式化规约69
5.1　规约机制的属性69
5.2　线性时序逻辑70
5.3　公理化LTL74
5.4　LTL规约示例74
5.4.1　交通灯74
5.4.2　顺序程序的属性75
5.4.3　互斥76
5.4.4　公平性条件76
5.5　无限字上的自动机77
5.6　使用Büchi自动机作为规约79
5.7　确定性Büchi自动机80
5.8　其他规约机制81
5.9　复杂的规约83
5.10　规约的完整性83
5.11　扩展阅读84
第6章　自动验证85
6.1　状态空间搜索86
6.2　状态表示方法87
6.3　自动机结构体系88
6.4　合并Büchi自动机89
6.4.1　广义Büchi自动机90
6.4.2　将广义Büchi自动机转换为简单Büchi自动机91
6.5　Büchi自动机求补92
6.6　检验空集93
6.7　模型检验范例94
6.8　将LTL转换为自动机95
6.9　模型检验的复杂度100
6.10　表示公平性102
6.11　检验LTL规约102
6.12　安全属性103
6.13　状态空间爆炸问题104
6.14　模型检验的优点105
6.15　模型检验的缺点105
6.16　选择自动验证工具105
6.17　模型检验项目105
6.18　模型检验工具106
6.19　扩展阅读106
第7章　演绎式软件验证107
7.1　流程图程序的验证107
7.2　含数组变量的验证111
7.2.1　含数组变量赋值的问题112
7.2.2　修改证明系统112
7.3　完全正确性114
7.4　公理式程序验证117
7.4.1　赋值公理117
7.4.2　空语句公理117
7.4.3　左强化规则117
7.4.4　右弱化规则118
7.4.5　顺序组合规则118
7.4.6　if-then-else规则118
7.4.7　while规则118
7.4.8　begin-end规则119
7.4.9　示例：整数除法119
7.5　并发程序的验证121
7.6　演绎验证的优点124
7.7　演绎验证的缺点125
7.8　证明系统的正确性和完备性126
7.9　组合性127
7.10　演绎验证工具128
7.11　扩展阅读128
第8章　进程代数与等价关系129
8.1　进程代数130
8.2　通信系统的演算131
8.2.1　动作前缀131
8.2.2　选择132
8.2.3　并发组合132
8.2.4　限制符133
8.2.5　重标记133
8.2.6　等式定义133
8.2.7　agent 0135
8.2.8　传值agent135
8.3　示例：Dekker算法135
8.4　建模问题137
8.5　agent之间的等价性138
8.5.1　迹等价139
8.5.2　失败等价139
8.5.3　模拟等价140
8.5.4　互模拟和弱互模拟等价142
8.6　等价关系的层级142
8.7　用进程代数研究并发143
8.8　计算互模拟等价145
8.9　LOTOS147
8.10　进程代数工具148
8.11　扩展阅读148
第9章　软件测试150
9.1　审查和走查151
9.2　控制流覆盖准则152
9.2.1　语句覆盖153
9.2.2　边覆盖153
9.2.3　条件覆盖153
9.2.4　边/条件覆盖154
9.2.5　条件组合覆盖154
9.2.6　路径覆盖154
9.2.7　不同覆盖准则的比较155
9.2.8　循环覆盖155
9.3　数据流覆盖准则155
9.4　传播路径条件157
9.4.1　示例：GCD程序159
9.4.2　含有输入语句的路径160
9.5　等价类划分160
9.6　待测代码预处理160
9.7　检查测试套件161
9.8　组合性162
9.9　黑盒测试163
9.10　概率测试164
9.11　测试的优点165
9.12　测试的缺点166
9.13　测试工具166
9.14　扩展阅读166
第10章　组合形式化方法167
10.1　抽象167
10.2　组合测试与模型检验171
10.2.1　直接检验171
10.2.2　黑盒系统172
10.2.3　组合锁自动机172
10.2.4　黑盒死锁检测172
10.2.5　一致性测试173
10.2.6　检验重置的可靠性175
10.2.7　黑盒检验176
10.3　净室方法177
10.3.1　验证177
10.3.2　证明审查177
10.3.3　测试177
10.4　扩展阅读178
第11章　可视化179
11.1　在形式化方法中运用可视化179
11.2　消息序列图180
11.3　可视化流程图和状态机182
11.4　层次状态图184
11.4.1　层次化状态184
11.4.2　统一的出口和入口185
11.4.3　并发185
11.4.4　输入和输出185
11.5　程序文本的可视化186
11.6　Petri网186
11.7　可视化工具188
11.8　扩展阅读188
结束语189
参考文献191
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Linux环境下Qt4图形界面与MySQL编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV 3和Qt5计算机视觉应用开发
译者序
序
前言
评阅者简介
第1章　OpenCV和Qt简介1
1.1　需要什么2
1.2　Qt介绍3
1.2.1　Qt基本模块3
1.2.2　Qt扩展4
1.2.3　附加值模块4
1.2.4　技术预览模块5
1.2.5　Qt支持的平台5
1.2.6　Qt Creator6
1.3　OpenCV介绍7
1.3.1　主模块8
1.3.2　附加模块8
1.4　安装Qt9
1.4.1　Qt安装准备9
1.4.2　在哪里获得Qt10
1.4.3　安装方法11
1.4.4　测试Qt安装14
1.5　安装OpenCV19
1.5.1　为构建OpenCV做准备19
1.5.2　在哪里获得OpenCV19
1.5.3　如何构建20
1.5.4　配置OpenCV安装23
1.5.5　测试OpenCV安装25
1.6　小结27
第2章　创建第一个Qt + OpenCV项目28
2.1　什么是Qt Creator29
2.2　IDE一览30
2.2.1　Qt Creator的模式30
2.2.2　Qt Creator的选项窗口58
2.3　小结61
第3章　创建完整的Qt + OpenCV项目62
3.1　后台63
3.1.1　qmake工具63
3.1.2　元对象编译器（moc）65
3.1.3　用户界面编译器（uic）66
3.2　设计模式67
3.3　Qt资源系统69
3.4　样式化应用程序73
3.4.1　选择器类型74
3.4.2　子控件75
3.4.3　伪状态75
3.4.4　级联75
3.5　多语言支持77
3.6　创建和使用插件81
3.6.1　接口82
3.6.2　插件84
3.6.3　插件加载器和用户88
3.7　创建基础94
3.8　小结96
第4章　Mat和QImage97
4.1　关于Mat类的所有内容98
4.1.1　构造函数、属性与方法100
4.1.2　Mat_<_Tp>类107
4.1.3　Matx<_Tp, m, n>107
4.1.4　UMat类108
4.1.5　InputArray、OutputArry、InputOutputArray108
4.2　利用OpenCV读取图像109
4.3　利用OpenCV写入图像110
4.4　OpenCV中的视频读写110
4.5　OpenCV中的HighGUI模块112
4.6　Qt中的图像和视频处理113
4.6.1　QImage类113
4.6.2　QPixmap类116
4.6.3　QImageReader与QImageWriter类119
4.6.4　QPainter类119
4.6.5　Qt中的相机和视频处理124
4.7　小结125
第5章　图形视图框架126
5.1　场景-视图-对象元素架构127
5.2　场景QGraphicsScene130
5.3　对象元素QGraphicsItem134
5.4　视图QGraphicsView142
5.5　小结152
第6章　基于OpenCV的图像处理153
6.1　图像滤波154
6.2　图像变换功能168
6.2.1　几何变换168
6.2.2　其他变换174
6.3　OpenCV绘图180
6.4　模板匹配183
6.5　小结185
第7章　特征及其描述符187
7.1　所有算法的基础—Algorithm类188
7.2　二维特征框架191
7.2.1　检测特征192
7.2.2　提取和匹配描述符204
7.3　如何选择算法211
7.3.1　精度212
7.3.2　速度212
7.3.3　资源利用率213
7.3.4　可用性213
7.4　小结213
第8章　多线程215
8.1　Qt中的多线程216
8.2　利用QThread实现低级多线程217
8.2.1　子类化QThread217
8.2.2　使用moveToThread函数222
8.3　线程同步工具224
8.3.1　互斥锁224
8.3.2　读写锁226
8.3.3　信号量228
8.3.4　等待条件228
8.4　基于QtConcurrent的高级多线程230
8.5　小结235
第9章　视频分析237
9.1　理解直方图238
9.2　理解反投影图像242
9.2.1　直方图比较250
9.2.2　直方图均衡化252
9.3　MeanShift算法和CamShift算法253
9.4　背景/前景检测260
9.5　小结263
第10章　调试与测试265
10.1　Qt Creator调试266
10.2　Qt测试框架271
10.2.1　创建单元测试272
10.2.2　数据驱动的测试276
10.2.3　基准测试278
10.2.4　GUI 测试278
10.2.5　测试用例项目281
10.3　小结283
第11章　链接和部署285
11.1　后台构建过程286
11.1.1　预处理286
11.1.2　编译286
11.1.3　链接287
11.2　构建OpenCV静态库288
11.3　构建Qt静态库289
11.4　部署Qt + OpenCV应用程序295
11.4.1　使用静态链接部署295
11.4.2　使用动态链接部署297
11.4.3　Qt安装程序框架299
11.5　小结302
第12章　Qt Quick应用程序304
12.1　QML介绍305
12.2　QML中的用户交互和脚本310
12.3　Qt Quick Designer的使用312
12.4　Qt Quick应用程序的结构313
12.5　集成C++和QML代码318
12.6　Android和iOS上的Qt和OpenCV应用程序324
12.7　小结326
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV 3和Qt5计算机视觉应用开发
